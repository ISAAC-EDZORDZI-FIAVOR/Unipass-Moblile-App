{
  "items": [
    {
      "title": "B.SC. INFORMATION TECHNOLOGY",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2>COMPUTER SYSTEMS AND APPLICATION</h2>  ",
            "<h2>TECHNICAL COMMUNICATION AND REPORT WRITING</h2>",
            "<h2>FOUNDATIONS OF EDUCATIONAL AND INSTRUCTIONAL TECHNOLOGIES</h2>",
            "<h2>VISUAL LITERACY</h2>",
            "<h2>INTRODUCTION TO CALCULUS</h2>",
            "<h2>EMERGING TECHNOLOGIES AND INTERNET APPLICATIONS IN EDUCATION</h2>",
            "<h2>INTRODUCTION TO INSTRUCTIONAL DESIGN</h2>",
            "<h2>FUNDAMENTALS OF COMPUTER PROGRAMMING</h2>",
            "<h2>INTRODUCTION TO LINEAR ALGEBRA</h2>",
            "<h2>MULTIMEDIA AUTHORING IN EDUCATION</h2>",
            "<h2>THE SOCIAL CURRICULUM, SOCIAL CHANGE AND NATIONAL DEVELOPMENT</h2>  "


          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [

            "<h2>OBJECT ORIENTED PROGRAMMING WITH JAVA</h2> <p>MULTIPLE CHOICE QUESTIONS ON OOP JAVA</p>\n<p>Object Oriented Programming Questions and Answers &ndash; OOPs Basic Concepts</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming online test focuses on &ldquo;OOP Basic Concepts&rdquo;.</p>\n<ol>\n<li>Which was the first purely object oriented programming language developed?</li>\n<li>a) Java</li>\n<li>b) C++</li>\n<li>c) SmallTalk</li>\n<li>d) Kotlin</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: SmallTalk was the first programming language developed which was purely object oriented. It was</p>\n<p>developed by Alan Kay. OOP concept came into the picture in 1970&rsquo;s.</p>\n<ol start=\"2\">\n<li>Which of the following best defines a class?</li>\n<li>a) Parent of an object</li>\n<li>b) Instance of an object</li>\n<li>c) Blueprint of an object</li>\n<li>d) Scope of an object</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: A class is Blueprint of an object which describes/ shows all the functions and data that are provided by</p>\n<p>an object of a specific class. It can&rsquo;t be called as parent or instance of an object. Class in general describes all the</p>\n<p>properties of an object.</p>\n<ol start=\"3\">\n<li>Who invented OOP?</li>\n<li>a) Alan Kay</li>\n<li>b) Andrea Ferro</li>\n<li>c) Dennis Ritchie</li>\n<li>d) Adele Goldberg</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Alan Kay invented OOP, Andrea Ferro was a part of SmallTalk Development. Dennis invented C++ and</p>\n<p>Adele Goldberg was in team to develop SmallTalk but Alan actually had got rewarded for OOP.</p>\n<ol start=\"4\">\n<li>What is the additional feature in classes that was not in structures?</li>\n<li>a) Data members</li>\n<li>b) Member functions</li>\n<li>c) Static data allowed</li>\n<li>d) Public access specifier</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Member functions are allowed inside a class but were not present in structure concept. Data members,</p>\n<p>static data and public access specifiers were present in structures too.</p>\n<ol start=\"5\">\n<li>Which is not feature of OOP in general definitions?</li>\n<li>a) Code reusability</li>\n<li>b) Modularity</li>\n<li>c) Duplicate/Redundant data</li>\n<li>d) Efficient Code</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Duplicate/Redundant data is dependent on programmer and hence can&rsquo;t be guaranteed by OOP. Code</p>\n<p>reusability is done using inheritance. Modularity is supported by using different code files and classes. Codes are</p>\n<p>more efficient because of features of OOP.</p>\n<ol start=\"6\">\n<li>Pure OOP can be implemented without using class in a program. (True or False)</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: It&rsquo;s false because for a program to be pure OO, everything must be written inside classes. If this rule is</p>\n<p>violated, the program can&rsquo;t be labelled as purely OO.</p>\n<ol start=\"7\">\n<li>Which Feature of OOP illustrated the code reusability?</li>\n<li>a) Polymorphism</li>\n<li>b) Abstraction</li>\n<li>c) Encapsulation</li>\n<li>d) Inheritance</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Using inheritance we can reuse the code already written and also can avoid creation of many new</p>\n<p>functions or variables, as that can be done one time and be reused, using classes.</p>\n<ol start=\"8\">\n<li>Which language does not support all 4 types of inheritance?</li>\n<li>a) C++</li>\n<li>b) Java</li>\n<li>c) Kotlin</li>\n<li>d) Small Talk</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Java doesn&rsquo;t support all 4 types of inheritance. It doesn&rsquo;t support multiple inheritance. But the multiple</p>\n<p>inheritance can be implemented using interfaces in Java.</p>\n<ol start=\"9\">\n<li>How many classes can be defined in a single program?</li>\n<li>a) Only 1</li>\n<li>b) Only 100</li>\n<li>c) Only 999</li>\n<li>d) As many as you want</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Any number of classes can be defined inside a program, provided that their names are different. In java,</p>\n<p>if public class is present then it must have the same name as that of file.</p>\n<ol start=\"10\">\n<li>When OOP concept did first came into picture?</li>\n<li>a) 1970&rsquo;s</li>\n<li>b) 1980&rsquo;s</li>\n<li>c) 1993</li>\n<li>d) 1995</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: OOP first came into picture in 1970&rsquo;s by Alan and his team. Later it was used by some programming</p>\n<p>languages and got implemented successfully, SmallTalk was first language to use pure OOP and followed all rules</p>\n<p>strictly.</p>\n<ol start=\"11\">\n<li>Why Java is Partially OOP language?</li>\n<li>a) It supports usual declaration of primitive data types</li>\n<li>b) It doesn&rsquo;t support all types of inheritance</li>\n<li>c) It allows code to be written outside classes</li>\n<li>d) It does not support pointers</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: As Java supports usual declaration of data variables, it is partial implementation of OOP. Because</p>\n<p>according to rules of OOP, object constructors must be used, even for declaration of variables.</p>\n<ol start=\"12\">\n<li>Which concept of OOP is false for C++?</li>\n<li>a) Code can be written without using classes</li>\n<li>b) Code must contain at least one class</li>\n<li>c) A class must have member functions</li>\n<li>d) At least one object should be declared in code</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: In C++, it&rsquo;s not necessary to use classes, and hence codes can be written without using OOP concept.</p>\n<p>Classes may or may not contain member functions, so it&rsquo;s not a necessary condition in C++. And, an object can only</p>\n<p>be declared in a code if its class is defined/included via header file.</p>\n<ol start=\"13\">\n<li>Which header file is required in C++ to use OOP?</li>\n<li>a) iostream.h</li>\n<li>b) stdio.h</li>\n<li>c) stdlib.h</li>\n<li>d) OOP can be used without using any header file</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: We need not include any specific header file to use OOP concept in C++, only specific functions used in</p>\n<p>code need their respective header files to be included or classes should be defined if needed.</p>\n<ol start=\"14\">\n<li>Which of the two features match each other?</li>\n<li>a) Inheritance and Encapsulation</li>\n<li>b) Encapsulation and Polymorphism</li>\n<li>c) Encapsulation and Abstraction</li>\n<li>d) Abstraction and Polymorphism</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Encapsulation and Abstraction are similar features. Encapsulation is actually binding all the properties in</p>\n<p>a single class or we can say hiding all the features of object inside a class. And Abstraction is hiding unwanted data</p>\n<p>(for user) and showing only the data required by the user of program.</p>\n<ol start=\"15\">\n<li>Which feature allows open recursion, among the following?</li>\n<li>a) Use of this pointer</li>\n<li>b) Use of pointers</li>\n<li>c) Use of pass by value</li>\n<li>d) Use of parameterized constructor</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Use of this pointer allows an object to call data and methods of itself whenever needed. This helps us</p>\n<p>call the members of an object recursively, and differentiate the variables of different scopes.</p>\n<p>OOP ON CLASSES</p>\n<p>Object Oriented Programming Questions and Answers &ndash; Classes</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers (MCQs) focuses on</p>\n<p>&ldquo;Classes&rdquo;.</p>\n<ol>\n<li>Which of the following is not type of class?</li>\n<li>a) Abstract Class</li>\n<li>b) Final Class</li>\n<li>c) Start Class</li>\n<li>d) String Class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Only 9 types of classes are provided in general, namely, abstract, final, mutable, wrapper,</p>\n<p>anonymous, input-output, string, system, network. We may further divide the classes into parent class and</p>\n<p>subclass if inheritance is used.</p>\n<ol start=\"2\">\n<li>Class is pass by _______</li>\n<li>a) Value</li>\n<li>b) Reference</li>\n<li>c) Value or Reference, depending on program</li>\n<li>d) Copy</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Classes are pass by reference, and the structures are pass by copy. It doesn&rsquo;t depend on the</p>\n<p>program.</p>\n<ol start=\"3\">\n<li>What is default access specifier for data members or member functions declared within a class without</li>\n</ol>\n<p>any specifier, in C++?</p>\n<ol>\n<li>a) Private</li>\n<li>b) Protected</li>\n<li>c) Public</li>\n<li>d) Depends on compiler</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: The data members and member functions are Private by default in C++ classes, if none of the</p>\n<p>access specifier is used. It is actually made to increase the privacy of data.</p>\n<ol start=\"4\">\n<li>Which is most appropriate comment on following class definition?</li>\n</ol>\n<p>class Student</p>\n<p>{</p>\n<p>&nbsp;int a;</p>\n<p>&nbsp;public : float a;</p>\n<p>};</p>\n<ol>\n<li>a) Error : same variable name can&rsquo;t be used twice</li>\n<li>b) Error : Public must come first</li>\n<li>c) Error : data types are different for same variable</li>\n<li>d) It is correct</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Same variable can&rsquo;t be defined twice in same scope. Even if the data types are different,</p>\n<p>variable name must be different. There is no rule like Public member should come first or last.</p>\n<ol start=\"5\">\n<li>Which is known as a generic class?</li>\n<li>a) Abstract class</li>\n<li>b) Final class</li>\n<li>c) Template class</li>\n<li>d) Efficient Code</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Template classes are known to be generic classes because those can be used for any data type</p>\n<p>value and the same class can be used for all the variables of different data types.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol start=\"6\">\n<li>Size of a class is _____________</li>\n<li>a) Sum of the size of all the variables declared inside the class</li>\n<li>b) Sum of the size of all the variables along with inherited variables in the class</li>\n<li>c) Size of the largest size of variable</li>\n<li>d) Classes doesn&rsquo;t have any size</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Classes doesn&rsquo;t have any size, actually the size of object of the class can be defined. That is</p>\n<p>done only when an object is created and its constructor is called.</p>\n<ol start=\"7\">\n<li>Which class can have member functions without their implementation?</li>\n<li>a) Default class</li>\n<li>b) String class</li>\n<li>c) Template class</li>\n<li>d) Abstract class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Abstract classes can have member functions with no implementation, where the inheriting</p>\n<p>subclasses must implement those functions.</p>\n<ol start=\"8\">\n<li>Which of the following describes a friend class?</li>\n<li>a) Friend class can access all the private members of the class, of which it is a friend</li>\n<li>b) Friend class can only access protected members of the class, of which it is a friend</li>\n<li>c) Friend class don&rsquo;t have any implementation</li>\n<li>d) Friend class can&rsquo;t access any data member of another class but can use it&rsquo;s methods</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: A friend class can access all the private members of another class, of which it is a friend. It is a</p>\n<p>special clas ns provided to use when you need to reuse the data of a class but don&rsquo;t want that class to have</p>\n<p>those special functions.</p>\n<ol start=\"9\">\n<li>What is the scope of a class nested inside another class?</li>\n<li>a) Protected scope</li>\n<li>b) Private scope</li>\n<li>c) Global scope</li>\n<li>d) Depends on access specifier and inheritance used</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: It depends on the access specifier and the type of inheritance used with the class, because if</p>\n<p>the class is inherited then the nested class can be used by subclass too, provided it&rsquo;s not of private type.</p>\n<ol start=\"10\">\n<li>Class with main() function can be inherited.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Answer: a</p>\n<p>Explanation: The class containing main function can be inherited and hence the program can be executed</p>\n<p>using the derived class names also in java.</p>\n<ol start=\"11\">\n<li>Which among the following is false, for a member function of a class?</li>\n<li>a) All member functions must be defined</li>\n<li>b) Member functions can be defined inside or outside the class body</li>\n<li>c) Member functions need not be declared inside the class definition</li>\n<li>d) Member functions can be made friend to another class using the friend keyword</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Member functions must be declared inside class body, though the definition can be given</p>\n<p>outside the class body. There is no way to declare the member functions outside the class.</p>\n<ol start=\"12\">\n<li>Which syntax for class definition is wrong?</li>\n<li>a) class student{ };</li>\n<li>b) student class{ };</li>\n<li>c) class student{ public: student(int a){ } };</li>\n<li>d) class student{ student(int a){} };</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Keyword class should come first. Class name should come after keyword class. Parameterized</p>\n<p>constructor definition depends on programmer so it can be left empty also.</p>\n<ol start=\"13\">\n<li>Which of the following pairs are similar?</li>\n<li>a) Class and object</li>\n<li>b) Class and structure</li>\n<li>c) Structure and object</li>\n<li>d) Structure and functions</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Class and structure are similar to each other. Only major difference is that a structure doesn&rsquo;t</p>\n<p>have member functions whereas the class can have both data members and member functions.</p>\n<ol start=\"14\">\n<li>Which among the following is false for class features?</li>\n<li>a) Classes may/may not have both data members and member functions</li>\n<li>b) Class definition must be ended with a colon</li>\n<li>c) Class can have only member functions with no data members</li>\n<li>d) Class is similar to union and structures</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Class definition must end with a semicolon, not colon. Class can have only member functions</p>\n<p>in its body with no data members.</p>\n<ol start=\"15\">\n<li>Instance of which type of class can&rsquo;t be created?</li>\n<li>a) Anonymous class</li>\n<li>b) Nested class</li>\n<li>c) Parent class</li>\n<li>d) Abstract class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Instance of abstract class can&rsquo;t be created as it will not have any constructor of its own, hence</p>\n<p>while creating an instance of class, it can&rsquo;t initialize the object members. Actually the class inheriting the</p>\n<p>abstract class can have its instance because it will have implementation of all members.</p>\n<p>OOP ON OBJECTS</p>\n<p>Object Oriented Programming Questions and Answers &ndash; Objects</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers (MCQs) focuses on</p>\n<p>&ldquo;Objects&rdquo;.</p>\n<ol>\n<li>Which definition best describes an object?</li>\n<li>a) Instance of a class</li>\n<li>b) Instance of itself</li>\n<li>c) Child of a class</li>\n<li>d) Overview of a class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: An object is instance of its class. It can be declared in the same way that a variable is declared,</p>\n<p>only thing is you have to use class name as the data type.</p>\n<ol start=\"2\">\n<li>How many objects can be declared of a specific class in a single program?</li>\n<li>a) 32768</li>\n<li>b) 127</li>\n<li>c) 1</li>\n<li>d) As many as you want</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: You can create as many objects of a specific class as you want, provided enough memory is</p>\n<p>available.</p>\n<ol start=\"3\">\n<li>Which among the following is false?</li>\n<li>a) Object must be created before using members of a class</li>\n<li>b) Memory for an object is allocated only after its constructor is called</li>\n<li>c) Objects can&rsquo;t be passed by reference</li>\n<li>d) Objects size depends on its class data members</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Objects can be passed by reference. Objects can be passed by value also. If the object of a</p>\n<p>class is not created, we can&rsquo;t use members of that class.</p>\n<ol start=\"4\">\n<li>Which of the following is incorrect?</li>\n<li>a) class student{ }s;</li>\n<li>b) class student{ }; student s;</li>\n<li>c) class student{ }s[];</li>\n<li>d) class student{ }; student s[5];</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The array must be specified with a size. You can&rsquo;t declare object array, or any other linear</p>\n<p>array without specifying its size. It&rsquo;s a mandatory field.</p>\n<ol start=\"5\">\n<li>The object can&rsquo;t be __________</li>\n<li>a) Passed by reference</li>\n<li>b) Passed by value</li>\n<li>c) Passed by copy</li>\n<li>d) Passed as function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Object can&rsquo;t be passed as function as it is an instance of some class, it&rsquo;s not a function. Object</p>\n<p>can be passed by reference, value or copy. There is no term defined as pass as function for objects.</p>\n<ol start=\"6\">\n<li>What is size of the object of following class (64 bit system)?</li>\n</ol>\n<p>class student { int rollno; char name[20]; static int studentno; };</p>\n<ol>\n<li>a) 20</li>\n<li>b) 22</li>\n<li>c) 24</li>\n<li>d) 28</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The size of any object of student class will be of size 4+20=24, because static members are not</p>\n<p>really considered as property of a single object. So static variables size will not be added.</p>\n<ol start=\"7\">\n<li>Functions can&rsquo;t return objects.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Functions can always return an object if the return type is same as that of object being</p>\n<p>returned. Care has to be taken while writing the prototype of the function.</p>\n<ol start=\"8\">\n<li>How members of an object are accessed?</li>\n<li>a) Using dot operator/period symbol</li>\n<li>b) Using scope resolution operator</li>\n<li>c) Using member names directly</li>\n<li>d) Using pointer only</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Using dot operator after the name of object we can access its members. It is not necessary to</p>\n<p>use the pointers. We can&rsquo;t use the names directly because it may be used outside the class.</p>\n<ol start=\"9\">\n<li>If a local class is defined in a function, which of the following is true for an object of that class?</li>\n<li>a) Object is accessible outside the function</li>\n<li>b) Object can be declared inside any other function</li>\n<li>c) Object can be used to call other class members</li>\n<li>d) Object can be used/accessed/declared locally in that function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: For an object which belongs to a local class, it is mandatory to declare and use the object</p>\n<p>within the function because the class is accessible locally within the class only.</p>\n<ol start=\"10\">\n<li>Which among the following is wrong?</li>\n<li>a) class student{ }; student s;</li>\n<li>b) abstract class student{ }; student s;</li>\n<li>c) abstract class student{ }s[50000000];</li>\n<li>d) abstract class student{ }; class toppers: public student{ }; topper t;</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: We can never create instance of an abstract class. Abstract classes doesn&rsquo;t have constructors</p>\n<p>and hence when an instance is created there is no facility to initialize its members. Option d is correct</p>\n<p>because topper class is inheriting the base abstract class student, and hence topper class object can be</p>\n<p>created easily.</p>\n<ol start=\"11\">\n<li>Object declared in main() function _____________</li>\n<li>a) Can be used by any other function</li>\n<li>b) Can be used by main() function of any other program</li>\n<li>c) Can&rsquo;t be used by any other function</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) Can be accessed using scope resolution operator</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The object declared in main() have local scope inside main() function only. It can&rsquo;t be used</p>\n<p>outside main() function. Scope resolution operator is used to access globally declared variables/objects.</p>\n<ol start=\"12\">\n<li>When an object is returned___________</li>\n<li>a) A temporary object is created to return the value</li>\n<li>b) The same object used in function is used to return the value</li>\n<li>c) The Object can be returned without creation of temporary object</li>\n<li>d) Object are returned implicitly, we can&rsquo;t say how it happens inside program</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: A temporary object is created to return the value. It is created because the object used in</p>\n<p>function is destroyed as soon as the function is returned. The temporary variable returns the value and</p>\n<p>then gets destroyed.</p>\n<ol start=\"13\">\n<li>Which among the following is correct?</li>\n<li>a) class student{ }s1,s2; s1.student()=s2.student();</li>\n<li>b) class student{ }s1; class topper{ }t1; s1=t1;</li>\n<li>c) class student{ }s1,s2; s1=s2;</li>\n<li>d) class student{ }s1; class topper{ }t1; s1.student()=s2.topper();</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Only if the objects are of same class then their data can be copied from to another using</p>\n<p>assignment operator. This actually comes under operator overloading. Class constructors can&rsquo;t be assigned</p>\n<p>any explicit value as in option class student{ }s1; class topper{ }t1; s1=t1; and class student{ }s1; class</p>\n<p>topper{ }t1; s1.student()=s2.topper();.</p>\n<ol start=\"14\">\n<li>Which among following is correct for initializing the class below?</li>\n</ol>\n<p>class student{</p>\n<p>int marks;</p>\n<p>int cgpa;</p>\n<p>public: student(int i, int j){</p>\n<p>marks=I;</p>\n<p>cgpa=j</p>\n<p>}</p>\n<p>};</p>\n<ol>\n<li>a) student s[3]={ s(394, 9); s(394, 9); s(394,9); };</li>\n<li>b) student s[2]={ s(394,9), s(222,5) };</li>\n<li>c) student s[2]={ s1(392,9), s2(222,5) };</li>\n<li>d) student s[2]={ s[392,9], s2[222,5] };</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: It is the way we can initialize the data members for an object array using parameterized</p>\n<p>constructor. We can do this to pass our own intended values to initialize the object array data.</p>\n<ol start=\"15\">\n<li>Object can&rsquo;t be used with pointers because they belong to user defined class, and compiler can&rsquo;t decide</li>\n</ol>\n<p>the type of data may be used inside the class.</p>\n<ol>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: The explanation given is wrong because object can always be used with pointers like with any</p>\n<p>other variables. Compiler doesn&rsquo;t have to know the structure of the class to use a pointer because the</p>\n<p>pointers only points to a memory address/stores that address.</p>\n<p>OOP ON FEATURES</p>\n<p>Object Oriented Programming Questions and Answers &ndash; OOPs Features</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers (MCQs) focuses on</p>\n<p>&ldquo;OOP Features&rdquo;.</p>\n<ol>\n<li>Which feature of OOP indicates code reusability?</li>\n<li>a) Encapsulation</li>\n<li>b) Inheritance</li>\n<li>c) Abstraction</li>\n<li>d) Polymorphism</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Inheritance indicates the code reusability. Encapsulation and abstraction are meant to</p>\n<p>hide/group data into one element. Polymorphism is to indicate different tasks performed by a single entity.</p>\n<ol start=\"2\">\n<li>If a function can perform more than 1 type of tasks, where the function name remains same, which</li>\n</ol>\n<p>feature of OOP is used here?</p>\n<ol>\n<li>a) Encapsulation</li>\n<li>b) Inheritance</li>\n<li>c) Polymorphism</li>\n<li>d) Abstraction</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: For the feature given above, the OOP feature used is Polymorphism. Example of</p>\n<p>polymorphism in real life is a kid, who can be a student, a son, a brother depending on where he is.</p>\n<ol start=\"3\">\n<li>If different properties and functions of a real world entity is grouped or embedded into a single element,</li>\n</ol>\n<p>what is it called in OOP language?</p>\n<ol>\n<li>a) Inheritance</li>\n<li>b) Polymorphism</li>\n<li>c) Abstraction</li>\n<li>d) Encapsulation</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: It is Encapsulation, which groups different properties and functions of a real world entity into</p>\n<p>single element. Abstraction, on other hand, is hiding of functional or exact working of codes and showing</p>\n<p>only the things which are required by the user.</p>\n<ol start=\"4\">\n<li>Which of the following is not a feature of pure OOP?</li>\n<li>a) Classes must be used</li>\n<li>b) Inheritance</li>\n<li>c) Data may/may not be declared using object</li>\n<li>d) Functions Overloading</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Data must be declared using objects. Object usage is mandatory because it in turn calls its</p>\n<p>constructors, which in turn must have a class defined. If object is not used, it is a violation of pure OOP</p>\n<p>concept.</p>\n<ol start=\"5\">\n<li>Which among the following doesn&rsquo;t come under OOP concept?</li>\n<li>a) Platform independent</li>\n<li>b) Data binding</li>\n<li>c) Message passing</li>\n<li>d) Data hiding</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Platform independence is not feature of OOP. C++ supports OOP but it&rsquo;s not a platform</p>\n<p>independent language. Platform independence depends on programming language.</p>\n<ol start=\"6\">\n<li>Which feature of OOP is indicated by the following code?</li>\n</ol>\n<p>class student{ int marks; };</p>\n<p>class topper:public student{ int age; topper(int age){ this.age=age; } };</p>\n<ol>\n<li>a) Inheritance</li>\n<li>b) Polymorphism</li>\n<li>c) Inheritance and polymorphism</li>\n<li>d) Encapsulation and Inheritance</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Encapsulation is indicated by use of classes. Inheritance is shown by inheriting the student</p>\n<p>class into topper class. Polymorphism is not shown here because we have defined the constructor in the</p>\n<p>topper class but that doesn&rsquo;t mean that default constructor is overloaded.</p>\n<ol start=\"7\">\n<li>Which feature may be violated if we don&rsquo;t use classes in a program?</li>\n<li>a) Inheritance can&rsquo;t be implemented</li>\n<li>b) Object must be used is violated</li>\n<li>c) Encapsulation only is violated</li>\n<li>d) Basically all the features of OOP gets violated</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: All the features are violated because Inheritance and Encapsulation won&rsquo;t be implemented.</p>\n<p>Polymorphism and Abstraction are still possible in some cases, but the main features like data binding,</p>\n<p>object use and etc won&rsquo;t be used hence the use of class is must for OOP concept.</p>\n<ol start=\"8\">\n<li>How many basic features of OOP are required for a programming language to be purely OOP?</li>\n<li>a) 7</li>\n<li>b) 6</li>\n<li>c) 5</li>\n<li>d) 4</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: There are 7 basic features that define whether a programing language is pure OOP or not. The</p>\n<p>4 basic features are inheritance, polymorphism, encapsulation and abstraction. Further, one is, object use</p>\n<p>is must, secondly, message passing and lastly, Dynamic binding.</p>\n<ol start=\"9\">\n<li>The feature by which one object can interact with another object is _____________</li>\n<li>a) Data transfer</li>\n<li>b) Data Binding</li>\n<li>c) Message Passing</li>\n<li>d) Message reading</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The interaction between two object is called the message passing feature. Data transfer is not</p>\n<p>a feature of OOP. Also, message reading is not a feature of OOP.</p>\n<ol start=\"10\">\n<li>___________ underlines the feature of Polymorphism in a class.</li>\n<li>a) Nested class</li>\n<li>b) Enclosing class</li>\n<li>c) Inline function</li>\n<li>d) Virtual Function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Virtual Functions can be defined in any class using the keyword virtual. All the classes which</p>\n<p>inherit the class containing the virtual function, define the virtual function as required. Redefining the</p>\n<p>function on all the derived classes according to class and use represents polymorphism.</p>\n<ol start=\"11\">\n<li>Which feature in OOP is used to allocate additional function to a predefined operator in any language?</li>\n<li>a) Operator Overloading</li>\n<li>b) Function Overloading</li>\n<li>c) Operator Overriding</li>\n<li>d) Function Overriding</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: The feature is operator overloading. There is not a feature named operator overriding</p>\n<p>specifically. Function overloading and overriding doesn&rsquo;t give addition function to any operator.</p>\n<ol start=\"12\">\n<li>Which among doesn&rsquo;t illustrates polymorphism?</li>\n<li>a) Function overloading</li>\n<li>b) Function overriding</li>\n<li>c) Operator overloading</li>\n<li>d) Virtual function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Function overriding doesn&rsquo;t illustrate polymorphism because the functions are actually</p>\n<p>different and theirs scopes are different. Function and operator overloading illustrate proper</p>\n<p>polymorphism. Virtual functions show polymorphism because all the classes which inherit virtual function,</p>\n<p>define the same function in different ways.</p>\n<ol start=\"13\">\n<li>Exception handling is a feature of OOP.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Exception handling is a feature of OOP as it includes classes concept in most of the cases. Also</p>\n<p>it may come handy while using inheritance.</p>\n<ol start=\"14\">\n<li>Which among the following, for a pure OOP language, is true?</li>\n<li>a) The language should follow 3 or more features of OOP</li>\n<li>b) The language should follow at least 1 feature of OOP</li>\n<li>c) The language must follow only 3 features of OOP</li>\n<li>d) The language must follow all the rules of OOP</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: The language must follow all the rules of OOP to be called a purely OOP language. Even if a</p>\n<p>single OOP feature is not followed, then it&rsquo;s known to be a partially OOP language.</p>\n<ol start=\"15\">\n<li>Does OOP provide better security than POP?</li>\n<li>a) Always true for any programming language</li>\n<li>b) May not be true with respect to all programming languages</li>\n<li>c) It depends on type of program</li>\n<li>d) It&rsquo;s vice-versa is true</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: It is always true as we have the facility of private and protected access specifiers. Also, only</p>\n<p>the public and global data are available globally or else the program should have proper permission to</p>\n<p>access the private data.</p>\n<p>OOP ON POLYMORPHISM</p>\n<p>Object Oriented Programming Questions and Answers &ndash; Polymorphism</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers</p>\n<p>(MCQs) focuses on &ldquo;Polymorphism&rdquo;.</p>\n<ol>\n<li>Which among the following best describes polymorphism?</li>\n<li>a) It is the ability for a message/data to be processed in more than one form</li>\n<li>b) It is the ability for a message/data to be processed in only 1 form</li>\n<li>c) It is the ability for many messages/data to be processed in one way</li>\n<li>d) It is the ability for undefined message/data to be processed in at least one way</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: It is actually the ability for a message / data to be processed in more than one</p>\n<p>form. The word polymorphism indicates many-forms. So if a single entity takes more than</p>\n<p>one form, it is known as polymorphism.</p>\n<ol start=\"2\">\n<li>What do you call the languages that support classes but not polymorphism?</li>\n<li>a) Class based language</li>\n<li>b) Procedure Oriented language</li>\n<li>c) Object-based language</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) If classes are supported, polymorphism will always be supported</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The languages which support classes but doesn&rsquo;t support polymorphism, are</p>\n<p>known as object-based languages. Polymorphism is such an important feature, that is a</p>\n<p>language doesn&rsquo;t support this feature, it can&rsquo;t be called as a OOP language.</p>\n<ol start=\"3\">\n<li>Which among the following is the language which supports classes but not</li>\n</ol>\n<p>polymorphism?</p>\n<ol>\n<li>a) SmallTalk</li>\n<li>b) Java</li>\n<li>c) C++</li>\n<li>d) Ada</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Ada is the language which supports the concept of classes but doesn&rsquo;t support</p>\n<p>the polymorphism feature. It is an object-based programming language. Note that it&rsquo;s not</p>\n<p>an OOP language.</p>\n<ol start=\"4\">\n<li>If same message is passed to objects of several different classes and all of those can</li>\n</ol>\n<p>respond in a different way, what is this feature called?</p>\n<ol>\n<li>a) Inheritance</li>\n<li>b) Overloading</li>\n<li>c) Polymorphism</li>\n<li>d) Overriding</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The feature defined in question defines polymorphism features. Here the</p>\n<p>different objects are capable of responding to the same message in different ways, hence</p>\n<p>polymorphism.</p>\n<ol start=\"5\">\n<li>Which class/set of classes can illustrate polymorphism in the following code?</li>\n</ol>\n<p>abstract class student</p>\n<p>{</p>\n<p>&nbsp;public : int marks;</p>\n<p>&nbsp;calc_grade();</p>\n<p>}</p>\n<p>class topper:public student</p>\n<p>{</p>\n<p>&nbsp;public : calc_grade()</p>\n<p>&nbsp;{</p>\n<p>&nbsp;return 10;</p>\n<p>&nbsp;}</p>\n<p>};</p>\n<p>class average:public student</p>\n<p>{</p>\n<p>&nbsp;public : calc_grade()</p>\n<p>&nbsp;{</p>\n<p>&nbsp;return 20;</p>\n<p>&nbsp;}</p>\n<p>};</p>\n<p>class failed{ int marks; };</p>\n<ol>\n<li>a) Only class student can show polymorphism</li>\n<li>b) Only class student and topper together can show polymorphism</li>\n<li>c) All class student, topper and average together can show polymorphism</li>\n<li>d) Class failed should also inherit class student for this code to work for polymorphism</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Since Student class is abstract class and class topper and average are inheriting</p>\n<p>student, class topper and average must define the function named calc_grade(); in abstract</p>\n<p>class. Since both the definition are different in those classes, calc_grade() will work in</p>\n<p>different way for same input from different objects. Hence it shows polymorphism.</p>\n<ol start=\"6\">\n<li>Which type of function among the following shows polymorphism?</li>\n<li>a) Inline function</li>\n<li>b) Virtual function</li>\n<li>c) Undefined functions</li>\n<li>d) Class member functions</li>\n</ol>\n<p>View Answer</p>\n<p>&nbsp;</p>\n<p>Answer: b</p>\n<p>Explanation: Only virtual functions among these can show polymorphism. Class member</p>\n<p>functions can show polymorphism too but we should be sure that the same function is</p>\n<p>being overloaded or is a function of abstract class or something like this, since we are not</p>\n<p>sure about all these, we can&rsquo;t say whether it can show polymorphism or not.</p>\n<ol start=\"7\">\n<li>In case of using abstract class or function overloading, which function is supposed to be</li>\n</ol>\n<p>called first?</p>\n<ol>\n<li>a) Local function</li>\n<li>b) Function with highest priority in compiler</li>\n<li>c) Global function</li>\n<li>d) Function with lowest priority because it might have been halted since long time, because</li>\n</ol>\n<p>of low priority</p>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Function with highest priority is called. Here, it&rsquo;s not about the thread</p>\n<p>scheduling in CPU, but it focuses on whether the function in local scope is present or not, or</p>\n<p>if scope resolution is used in some way, or if the function matches the argument signature.</p>\n<p>So all these things define which function has the highest priority to be called in runtime.</p>\n<p>Local function could be one of the answer but we can&rsquo;t say if someone have used pointer to</p>\n<p>another function or same function name.</p>\n<ol start=\"8\">\n<li>Which among the following can&rsquo;t be used for polymorphism?</li>\n<li>a) Static member functions</li>\n<li>b) Member functions overloading</li>\n<li>c) Predefined operator overloading</li>\n<li>d) Constructor overloading</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Static member functions are not property of any object. Hence it can&rsquo;t be</p>\n<p>considered for overloading/overriding. For polymorphism, function must be property of</p>\n<p>object, not only of class.</p>\n<ol start=\"9\">\n<li>What is output of the following program?</li>\n</ol>\n<p>class student</p>\n<p>{</p>\n<p>&nbsp;public : int marks;</p>\n<p>void disp()</p>\n<p>{</p>\n<p>cout&lt;&lt;&rdquo;its base class&rdquo;</p>\n<p>};</p>\n<p>class topper:public student</p>\n<p>{</p>\n<p>public :</p>\n<p>void disp()</p>\n<p>{</p>\n<p>cout&lt;&lt;&rdquo;Its derived class&rdquo;;</p>\n<p>}</p>\n<p>}</p>\n<p>void main() { student s; topper t;</p>\n<p>s.disp();</p>\n<p>t.disp();</p>\n<p>}</p>\n<ol>\n<li>a) Its base classIts derived class</li>\n<li>b) Its base class Its derived class</li>\n<li>c) Its derived classIts base class</li>\n<li>d) Its derived class Its base class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: You need to focus on how the output is going to be shown, no space will be</p>\n<p>given after first message from base class. And then the message from derived class will be</p>\n<p>printed. Function disp() in base class overrides the function of base class being derived.</p>\n<ol start=\"10\">\n<li>Which among the following can show polymorphism?</li>\n<li>a) Overloading ||</li>\n<li>b) Overloading +=</li>\n<li>c) Overloading &lt;&lt;</li>\n<li>d) Overloading &amp;&amp;</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Only insertion operator can be overloaded among all the given options. And</p>\n<p>the polymorphism can be illustrated here only if any of these is applicable of being</p>\n<p>overloaded. Overloading is type of polymorphism.</p>\n<ol start=\"11\">\n<li>Find the output of the following program.</li>\n</ol>\n<p>class education</p>\n<p>{</p>\n<p>char name[10];</p>\n<p>public : disp()</p>\n<p>{</p>\n<p>cout&lt;&lt;&rdquo;Its education system&rdquo;;</p>\n<p>}</p>\n<p>class school:public education</p>\n<p>{</p>\n<p>public: void dsip()</p>\n<p>{</p>\n<p>cout&lt;&lt;&rdquo;Its school education system&rdquo;;</p>\n<p>}</p>\n<p>&nbsp;};</p>\n<p>void main()</p>\n<p>{</p>\n<p>&nbsp;school s;</p>\n<p>&nbsp;s.disp();</p>\n<p>}</p>\n<p>}</p>\n<ol>\n<li>a) Its school education system</li>\n<li>b) Its education system</li>\n<li>c) Its school education systemIts education system</li>\n<li>d) Its education systemIts school education system</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Notice that the function name in derived class is different from the function</p>\n<p>name in base class. Hence when we call the disp() function, base class function is executed.</p>\n<p>No polymorphism is used here.</p>\n<ol start=\"12\">\n<li>Polymorphism is possible in C language.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: It is possible to implement polymorphism in C language, even though it</p>\n<p>doesn&rsquo;t support class. We can use structures and then declare pointers which in turn points</p>\n<p>to some function. In this way we simulate the functions like member functions but not</p>\n<p>exactly member function. Now we can overload these functions, hence implementing</p>\n<p>polymorphism in C language.</p>\n<ol start=\"13\">\n<li>Which problem may arise if we use abstract class functions for polymorphism?</li>\n<li>a) All classes are converted as abstract class</li>\n<li>b) Derived class must be of abstract type</li>\n<li>c) All the derived classes must implement the undefined functions</li>\n<li>d) Derived classes can&rsquo;t redefine the function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: The undefined functions must be defined is a problem, because one may need</p>\n<p>to implement few undefined functions from abstract class, but he will have to define each</p>\n<p>of the functions declared in abstract class. Being useless task, it is a problem sometimes.</p>\n<ol start=\"14\">\n<li>Which among the following is not true for polymorphism?</li>\n<li>a) It is feature of OOP</li>\n<li>b) Ease in readability of program</li>\n<li>c) Helps in redefining the same functionality</li>\n<li>d) Increases overhead of function definition always</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: It never increases function definition overhead, one way or another if you</p>\n<p>don&rsquo;t use polymorphism, you will use the definition in some other way, so it actually helps</p>\n<p>to write efficient codes.</p>\n<ol start=\"15\">\n<li>If 2 classes derive one base class and redefine a function of base class, also overload</li>\n</ol>\n<p>some operators inside class body. Among these two things of function and operator</p>\n<p>overloading, where is polymorphism used?</p>\n<ol>\n<li>a) Function overloading only</li>\n<li>b) Operator overloading only</li>\n<li>c) Both of these are using polymorphism</li>\n<li>d) Either function overloading or operator overloading because polymorphism can be</li>\n</ol>\n<p>applied only once in a program</p>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Both of them are using polymorphism. It is not necessary that polymorphism</p>\n<p>can be used only once in a program, it can be used anywhere, any number of times in a</p>\n<p>single program.</p>\n<p>OOP ON ENCAPSULATION</p>\n<p>Object Oriented Programming Questions and Answers &ndash; Encapsulation</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers (MCQs) focuses on</p>\n<p>&ldquo;Encapsulation&rdquo;.</p>\n<ol>\n<li>Which among the following best describes encapsulation?</li>\n<li>a) It is a way of combining various data members into a single unit</li>\n<li>b) It is a way of combining various member functions into a single unit</li>\n<li>c) It is a way of combining various data members and member functions into a single unit which can</li>\n</ol>\n<p>operate on any data</p>\n<ol>\n<li>d) It is a way of combining various data members and member functions that operate on those data</li>\n</ol>\n<p>members into a single unit</p>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: It is a way of combining both data members and member functions, which operate on those</p>\n<p>data members, into a single unit. We call it a class in OOP generally. This feature have helped us modify the</p>\n<p>structures used in C language to be upgraded into class in C++ and other languages.</p>\n<ol start=\"2\">\n<li>If data members are private, what can we do to access them from the class object?</li>\n<li>a) Create public member functions to access those data members</li>\n<li>b) Create private member functions to access those data members</li>\n<li>c) Create protected member functions to access those data members</li>\n<li>d) Private data members can never be accessed from outside the class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: We can define public member functions to access those private data members and get their</p>\n<p>value for use or alteration. They can&rsquo;t be accessed directly but is possible to be access using member</p>\n<p>functions. This is done to ensure that the private data doesn&rsquo;t get modified accidentally.</p>\n<ol start=\"3\">\n<li>While using encapsulation, which among the following is possible?</li>\n<li>a) Code modification can be additional overhead</li>\n<li>b) Data member&rsquo;s data type can be changed without changing any other code</li>\n<li>c) Data member&rsquo;s type can&rsquo;t be changed, or whole code have to be changed</li>\n<li>d) Member functions can be used to change the data type of data members</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Data member&rsquo;s data type can be changed without changing any further code. All the</p>\n<p>members using that data can continue in the same way without any modification. Member functions can</p>\n<p>never change the data type of same class data members.</p>\n<ol start=\"4\">\n<li>Which feature can be implemented using encapsulation?</li>\n<li>a) Inheritance</li>\n<li>b) Abstraction</li>\n<li>c) Polymorphism</li>\n<li>d) Overloading</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Data abstraction can be achieved by using encapsulation. We can hide the operation and</p>\n<p>structure of actual program from the user and can show only required information by the user.</p>\n<ol start=\"5\">\n<li>Find which of the following uses encapsulation?</li>\n<li>a) void main(){ int a; void fun( int a=10; cout&lt;&lt;a); fun(); }</li>\n<li>b) class student{ int a; public: int b;};</li>\n<li>c) class student{int a; public: void disp(){ cout&lt;&lt;a;} };</li>\n<li>d) struct topper{ char name[10]; public : int marks; }</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: It is the class which uses both the data members and member functions being declared inside</p>\n<p>a single unit. Only data members can be there in structures also. And the encapsulation can only be</p>\n<p>illustrated if some data/operations are associated within class.</p>\n<ol start=\"6\">\n<li>Encapsulation helps in writing ___________ classes in java.</li>\n<li>a) Mutable</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>b) Abstract</li>\n<li>c) Wrapper</li>\n<li>d) Immutable</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Immutable classes are used for caching purpose generally. And it can be created by making</p>\n<p>the class as final and making all its members private.</p>\n<ol start=\"7\">\n<li>Which among the following should be encapsulated?</li>\n<li>a) The data which is prone to change is near future</li>\n<li>b) The data prone to change in long terms</li>\n<li>c) The data which is intended to be changed</li>\n<li>d) The data which belongs to some other class</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: The data prone to change in near future is usually encapsulated so that it doesn&rsquo;t get changed</p>\n<p>accidentally. We encapsulate the data to hide the critical working of program from outside world.</p>\n<ol start=\"8\">\n<li>How can Encapsulation be achieved?</li>\n<li>a) Using Access Specifiers</li>\n<li>b) Using only private members</li>\n<li>c) Using inheritance</li>\n<li>d) Using Abstraction</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Using access specifiers we can achieve encapsulation. Using this we can in turn implement</p>\n<p>data abstraction. It&rsquo;s not necessary that we only use private access.</p>\n<ol start=\"9\">\n<li>Which among the following violates the principle of encapsulation almost always?</li>\n<li>a) Local variables</li>\n<li>b) Global variables</li>\n<li>c) Public variables</li>\n<li>d) Array variables</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Global variables almost always violates the principles of encapsulation. Encapsulation says the</p>\n<p>data should be accessed only by required set of elements. But global variable is accessible everywhere,</p>\n<p>also it is most prone to changes. It doesn&rsquo;t hide the internal working of program.</p>\n<ol start=\"10\">\n<li>Which among the following would destroy the encapsulation mechanism if it was allowed in</li>\n</ol>\n<p>programming?</p>\n<ol>\n<li>a) Using access declaration for private members of base class</li>\n<li>b) Using access declaration for public members of base class</li>\n<li>c) Using access declaration for local variable of main() function</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) Using access declaration for global variables</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: If using access declaration for private members of base class was allowed in programming, it</p>\n<p>would have destroyed whole concept of encapsulation. As if it was possible, any class which gets inherited</p>\n<p>privately, would have been able to inherit the private members of base class, and hence could access each</p>\n<p>and every member of base class.</p>\n<ol start=\"11\">\n<li>Which among the following can be a concept against encapsulation rules?</li>\n<li>a) Using function pointers</li>\n<li>b) Using char* string pointer to be passed to non-member function</li>\n<li>c) Using object array</li>\n<li>d) Using any kind of pointer/array address in passing to another function</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: If we use any kind of array or pointer as data member which should not be changed, but in</p>\n<p>some case its address is passed to some other function or similar variable. There are chances to modify its</p>\n<p>whole data easily. Hence Against encapsulation.</p>\n<ol start=\"12\">\n<li>Consider the following code and select the correct option.</li>\n</ol>\n<p>class student</p>\n<p>{</p>\n<p>&nbsp;int marks;</p>\n<p>&nbsp;public : int* fun()</p>\n<p>&nbsp;{</p>\n<p>&nbsp;return &amp;marks;</p>\n<p>&nbsp;}</p>\n<p>};</p>\n<p>main()</p>\n<p>{</p>\n<p>&nbsp;student s;</p>\n<p>&nbsp;int *ptr=c.fun();</p>\n<p>&nbsp;return 0;</p>\n<p>}</p>\n<ol>\n<li>a) This code is good to go</li>\n<li>b) This code may result in undesirable conditions</li>\n<li>c) This code will generate error</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) This code violates encapsulation</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: This code violates the encapsulation. By this code we can get the address of the private</p>\n<p>member of the class, hence we can change the value of private member, which is against the rules.</p>\n<ol start=\"13\">\n<li>Consider the code and select the wrong choice.</li>\n</ol>\n<p>class hero</p>\n<p>{</p>\n<p>&nbsp;char name[10];</p>\n<p>&nbsp;public : void disp()</p>\n<p>&nbsp;{</p>\n<p>&nbsp;cout&lt;&lt;name;</p>\n<p>&nbsp;}</p>\n<p>};</p>\n<ol>\n<li>a) This maintains encapsulation</li>\n<li>b) This code doesn&rsquo;t maintain encapsulation</li>\n<li>c) This code is vulnerable</li>\n<li>d) This code gives error</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: This code maintains encapsulation. Here the private member is kept private. Outside code</p>\n<p>can&rsquo;t access the private members of class. Only objects of this class will be able to access the public</p>\n<p>member function at maximum.</p>\n<ol start=\"14\">\n<li>Encapsulation is the way to add functions in a user defined structure.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: False, because we can&rsquo;t call these structures if member functions are involved, it must be</p>\n<p>called class. Also, it is not just about adding functions, it&rsquo;s about binding data and functions together.</p>\n<ol start=\"15\">\n<li>Using encapsulation data security is ___________</li>\n<li>a) Not ensured</li>\n<li>b) Ensured to some extent</li>\n<li>c) Purely ensured</li>\n<li>d) Very low</li>\n</ol>\n<p>View Answer</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Answer: b</p>\n<p>Explanation: The encapsulation can only ensure data security to some extent. If pointer and addresses are</p>\n<p>misused, it may violate encapsulation. Use of global variables also makes the program vulnerable, hence</p>\n<p>we can&rsquo;t say that encapsulation gives pure security.</p>\n<p>OOP ON ABSTRACTIONS</p>\n<p>Object Oriented Programming Questions and Answers &ndash; Abstraction</p>\n<p>This set of Object Oriented Programming (OOPs) Multiple Choice Questions &amp; Answers</p>\n<p>(MCQs) focuses on &ldquo;Abstraction&rdquo;.</p>\n<ol>\n<li>Which among the following best defines abstraction?</li>\n<li>a) Hiding the implementation</li>\n<li>b) Showing the important data</li>\n<li>c) Hiding the important data</li>\n<li>d) Hiding the implementation and showing only the features</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: It includes hiding the implementation part and showing only the required data</p>\n<p>and features to the user. It is done to hide the implementation complexity and details from</p>\n<p>the user. And to provide a good interface in programming.</p>\n<ol start=\"2\">\n<li>Hiding the implementation complexity can ____________</li>\n<li>a) Make the programming easy</li>\n<li>b) Make the programming complex</li>\n<li>c) Provide more number of features</li>\n<li>d) Provide better features</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: It can make programming easy. The programming need not know how the</p>\n<p>inbuilt functions are working but can use those complex functions directly in the program. It</p>\n<p>doesn&rsquo;t provide more number of features or better features.</p>\n<ol start=\"3\">\n<li>Class is _________ abstraction.</li>\n<li>a) Object</li>\n<li>b) Logical</li>\n<li>c) Real</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) Hypothetical</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Class is logical abstraction because it provides a logical structure for all of its</p>\n<p>objects. It gives an overview of the features of an object.</p>\n<ol start=\"4\">\n<li>Object is ________ abstraction.</li>\n<li>a) Object</li>\n<li>b) Logical</li>\n<li>c) Real</li>\n<li>d) Hypothetical</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Object is real abstraction because it actually contains those features of class. It</p>\n<p>is the implementation of overview given by class. Hence the class is logical abstraction and</p>\n<p>its object is real.</p>\n<ol start=\"5\">\n<li>Abstraction gives higher degree of ________</li>\n<li>a) Class usage</li>\n<li>b) Program complexity</li>\n<li>c) Idealized interface</li>\n<li>d) Unstable interface</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: It is to idealize the interface. In this way the programmer can use the</p>\n<p>programming features more efficiently and can code better. It can&rsquo;t increase the program</p>\n<p>complexity, as the feature itself is made to hide it.</p>\n<ol start=\"6\">\n<li>Abstraction can apply to ____________</li>\n<li>a) Control and data</li>\n<li>b) Only data</li>\n<li>c) Only control</li>\n<li>d) Classes</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Abstraction applies to both. Control abstraction involves use of subroutines</p>\n<p>and control flow abstraction. Data abstraction involves handling pieces of data in</p>\n<p>meaningful ways.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol start=\"7\">\n<li>Which among the following can be viewed as combination of abstraction of data and</li>\n</ol>\n<p>code.</p>\n<ol>\n<li>a) Class</li>\n<li>b) Object</li>\n<li>c) Inheritance</li>\n<li>d) Interfaces</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Object can be viewed as abstraction of data and code. It uses data members</p>\n<p>and their functioning as data abstraction. Code abstraction as use of object of inbuilt class.</p>\n<ol start=\"8\">\n<li>Abstraction principle includes___________</li>\n<li>a) Use abstraction at its minimum</li>\n<li>b) Use abstraction to avoid longer codes</li>\n<li>c) Use abstraction whenever possible to avoid duplication</li>\n<li>d) Use abstraction whenever possible to achieve OOP</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Abstraction principle includes use of abstraction to avoid duplication (usually</p>\n<p>of code). It this way the program doesn&rsquo;t contain any redundant functions and make the</p>\n<p>program efficient.</p>\n<ol start=\"9\">\n<li>Higher the level of abstraction, higher are the details.</li>\n<li>a) True</li>\n<li>b) False</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Higher the level of abstraction, lower are the details. The best way to</p>\n<p>understand this is to consider a whole system that is highest level of abstraction as it hides</p>\n<p>everything inside. And next lower level would contain few of the computer components</p>\n<p>and so on.</p>\n<ol start=\"10\">\n<li>Encapsulation and abstraction differ as ____________</li>\n<li>a) Binding and Hiding respectively</li>\n<li>b) Hiding and Binding respectively</li>\n<li>c) Can be used any way</li>\n<li>d) Hiding and hiding respectively</li>\n</ol>\n<p>View Answer</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Answer: a</p>\n<p>Explanation: Abstraction is hiding the complex code. For example, we directly use cout</p>\n<p>object in C++ but we don&rsquo;t know how is it actually implemented. Encapsulation is data</p>\n<p>binding, as in, we try to combine a similar type of data and functions together.</p>\n<ol start=\"11\">\n<li>In terms of stream and files ____________</li>\n<li>a) Abstraction is called a stream and device is called a file</li>\n<li>b) Abstraction is called a file and device is called a stream</li>\n<li>c) Abstraction can be called both file and stream</li>\n<li>d) Abstraction can&rsquo;t be defined in terms of files and stream</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Abstraction is called stream to provide a level of complexity hiding, for how</p>\n<p>the files operations are actually done. Actual devices are called file because in one way or</p>\n<p>another, those can be considered as single entity and there is nothing hidden.</p>\n<ol start=\"12\">\n<li>If two classes combine some private data members and provides public member</li>\n</ol>\n<p>functions to access and manipulate those data members. Where is abstraction used?</p>\n<ol>\n<li>a) Using private access specifier for data members</li>\n<li>b) Using class concept with both data members and member functions</li>\n<li>c) Using public member functions to access and manipulate the data members</li>\n<li>d) Data is not sufficient to decide what is being used</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: It is the concept of hiding program complexity and actual working in</p>\n<p>background. Hence use of public member functions illustrates abstraction here.</p>\n<ol start=\"13\">\n<li>A phone is made up of many components like motherboard, camera, sensors and etc. If</li>\n</ol>\n<p>the processor represents all the functioning of phone, display shows the display only, and</p>\n<p>the phone is represented as a whole. Which among the following have highest level of</p>\n<p>abstraction?</p>\n<ol>\n<li>a) Motherboard</li>\n<li>b) Display</li>\n<li>c) Camera</li>\n<li>d) Phone</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Phone as a whole have the highest level of abstraction. This is because the</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>phone being a single unit represents the whole system. Whereas motherboard, display and</p>\n<p>camera are its components.</p>\n<ol start=\"14\">\n<li>Which among the following is not a level of abstraction?</li>\n<li>a) Logical level</li>\n<li>b) Physical level</li>\n<li>c) View level</li>\n<li>d) External level</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: Abstraction is generally divided into 3 different levels, namely, logical, physical</p>\n<p>and view level. External level is not defined in terms of abstraction.</p>\n<ol start=\"15\">\n<li>Using higher degree of abstraction __________</li>\n<li>a) May get unsafe</li>\n<li>b) May reduce readability</li>\n<li>c) Can be safer</li>\n<li>d) Can increase vulnerability</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: It will make the code safer. One may think it reduces the readability, but the</p>\n<p>fact is, it actually helps us understand the code better. We don&rsquo;t have to read the complex</p>\n<p>code which is of no use in understanding the program.</p>\n<p>EXCEPTION HANDLING IN JAVA OOP</p>\n<p>Java Questions &amp; Answers &ndash; Exceptional Handling Basics</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This section of our 1000+ Java MCQs focuses on exception handling of Java Programming</p>\n<p>Language.</p>\n<ol>\n<li>When does Exceptions in Java arises in code sequence?</li>\n<li>a) Run Time</li>\n<li>b) Compilation Time</li>\n<li>c) Can Occur Any Time</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) None of the mentioned</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Exceptions in Java are run-time errors.</p>\n<ol start=\"2\">\n<li>Which of these keywords is not a part of exception handling?</li>\n<li>a) try</li>\n<li>b) finally</li>\n<li>c) thrown</li>\n<li>d) catch</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Exceptional handling is managed via 5 keywords &ndash; try, catch, throws, throw</p>\n<p>and finally.</p>\n<ol start=\"3\">\n<li>Which of these keywords must be used to monitor for exceptions?</li>\n<li>a) try</li>\n<li>b) finally</li>\n<li>c) throw</li>\n<li>d) catch</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: None.</p>\n<ol start=\"4\">\n<li>Which of these keywords must be used to handle the exception thrown by try block in</li>\n</ol>\n<p>some rational manner?</p>\n<ol>\n<li>a) try</li>\n<li>b) finally</li>\n<li>c) throw</li>\n<li>d) catch</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: If an exception occurs within the try block, it is thrown and cached by catch</p>\n<p>block for processing.</p>\n<ol start=\"5\">\n<li>Which of these keywords is used to manually throw an exception?</li>\n<li>a) try</li>\n<li>b) finally</li>\n<li>c) throw</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) catch</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: None.</p>\n<ol start=\"6\">\n<li>What will be the output of the following Java program?</li>\n<li>class exception_handling</li>\n<li>{</li>\n<li>public static void main(String args[])</li>\n<li>{</li>\n<li>try</li>\n<li>{</li>\n<li>System.out.print(\"Hello\" + \" \" + 1 / 0);</li>\n<li>}</li>\n<li>catch(ArithmeticException e)</li>\n<li>{</li>\n<li>System.out.print(\"World\");</li>\n<li>}</li>\n<li>}</li>\n<li>}</li>\n<li>a) Hello</li>\n<li>b) World</li>\n<li>c) HelloWorld</li>\n<li>d) Hello World</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: System.ou.print() function first converts the whole parameters into a string</p>\n<p>and then prints, before &ldquo;Hello&rdquo; goes to output stream 1 / 0 error is encountered which is</p>\n<p>cached by catch block printing just &ldquo;World&rdquo;.</p>\n<p>Output:</p>\n<p>$ javac exception_handling.java</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>$ java exception_handling</p>\n<p>World</p>\n<ol start=\"7\">\n<li>What will be the output of the following Java program?</li>\n<li>class exception_handling</li>\n<li>{</li>\n<li>public static void main(String args[])</li>\n<li>{</li>\n<li>try</li>\n<li>{</li>\n<li>int a, b;</li>\n<li>b = 0;</li>\n<li>a = 5 / b;</li>\n<li>System.out.print(\"A\");</li>\n<li>}</li>\n<li>catch(ArithmeticException e)</li>\n<li>{</li>\n<li>System.out.print(\"B\");</li>\n<li>}</li>\n<li>}</li>\n<li>}</li>\n<li>a) A</li>\n<li>b) B</li>\n<li>c) Compilation Error</li>\n<li>d) Runtime Error</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: None.</p>\n<p>Output:</p>\n<p>$ javac exception_handling.java</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>$ java exception_handling</p>\n<p>B</p>\n<ol start=\"8\">\n<li>What will be the output of the following Java program?</li>\n<li>class exception_handling</li>\n<li>{</li>\n<li>public static void main(String args[])</li>\n<li>{</li>\n<li>try</li>\n<li>{</li>\n<li>int a, b;</li>\n<li>b = 0;</li>\n<li>a = 5 / b;</li>\n<li>System.out.print(\"A\");</li>\n<li>}</li>\n<li>catch(ArithmeticException e)</li>\n<li>{</li>\n<li>System.out.print(\"B\");</li>\n<li>}</li>\n<li>finally</li>\n<li>{</li>\n<li>System.out.print(\"C\");</li>\n<li>}</li>\n<li>}</li>\n<li>}</li>\n<li>a) A</li>\n<li>b) B</li>\n<li>c) AC</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) BC</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: finally keyword is used to execute the code before try and catch block end.</p>\n<p>Output:</p>\n<p>$ javac exception_handling.java</p>\n<p>$ java exception_handling</p>\n<p>BC</p>\n<ol start=\"9\">\n<li>What will be the output of the following Java program?</li>\n<li>class exception_handling</li>\n<li>{</li>\n<li>public static void main(String args[])</li>\n<li>{</li>\n<li>try</li>\n<li>{</li>\n<li>int i, sum;</li>\n<li>sum = 10;</li>\n<li>for (i = -1; i &lt; 3 ;++i)</li>\n<li>sum = (sum / i);</li>\n<li>}</li>\n<li>catch(ArithmeticException e)</li>\n<li>{</li>\n<li>System.out.print(\"0\");</li>\n<li>}</li>\n<li>System.out.print(sum);</li>\n<li>}</li>\n<li>}</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>a) 0</li>\n<li>b) 05</li>\n<li>c) Compilation Error</li>\n<li>d) Runtime Error</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: Value of variable sum is printed outside of try block, sum is declared only in try</p>\n<p>block, outside try block it is undefined.</p>\n<p>Output:</p>\n<p>$ javac exception_handling.java</p>\n<p>Exception in thread \"main\" java.lang.Error: Unresolved compilation problem:</p>\n<p>sum cannot be resolved to a variable</p>\n<p>Java Questions &amp; Answers &ndash; JDK-JRE-JIT-JVM</p>\n<p>&laquo; Prev</p>\n<p>Next &raquo;</p>\n<p>This set of Java Multiple Choice Questions &amp; Answers (MCQs) focuses on &ldquo;JDK-JRE-JIT-JVM&rdquo;.</p>\n<ol>\n<li>Which component is used to compile, debug and execute java program?</li>\n<li>a) JVM</li>\n<li>b) JDK</li>\n<li>c) JIT</li>\n<li>d) JRE</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: JDK is a core component of Java Environment and provides all the tools,</p>\n<p>executables and binaries required to compile, debug and execute a Java Program.</p>\n<ol start=\"2\">\n<li>Which component is responsible for converting bytecode into machine specific code?</li>\n<li>a) JVM</li>\n<li>b) JDK</li>\n<li>c) JIT</li>\n</ol>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol>\n<li>d) JRE</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: JVM is responsible to converting bytecode to the machine specific code. JVM is</p>\n<p>also platform dependent and provides core java functions like garbage collection, memory</p>\n<p>management, security etc.</p>\n<ol start=\"3\">\n<li>Which component is responsible to run java program?</li>\n<li>a) JVM</li>\n<li>b) JDK</li>\n<li>c) JIT</li>\n<li>d) JRE</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: d</p>\n<p>Explanation: JRE is the implementation of JVM, it provides platform to execute java</p>\n<p>programs.</p>\n<ol start=\"4\">\n<li>Which component is responsible to optimize bytecode to machine code?</li>\n<li>a) JVM</li>\n<li>b) JDK</li>\n<li>c) JIT</li>\n<li>d) JRE</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: JIT optimizes bytecode to machine specific language code by compiling similar</p>\n<p>bytecodes at the same time. This reduces overall time taken for compilation of bytecode to</p>\n<p>machine specific language.</p>\n<ol start=\"5\">\n<li>Which statement is true about java?</li>\n<li>a) Platform independent programming language</li>\n<li>b) Platform dependent programming language</li>\n<li>c) Code dependent programming language</li>\n<li>d) Sequence dependent programming language</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: Java is called &lsquo;Platform Independent Language&rsquo; as it primarily works on the</p>\n<p>principle of &lsquo;compile once, run everywhere&rsquo;.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol start=\"6\">\n<li>Which of the below is invalid identifier with the main method?</li>\n<li>a) public</li>\n<li>b) static</li>\n<li>c) private</li>\n<li>d) final</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: c</p>\n<p>Explanation: main method cannot be private as it is invoked by external method. Other</p>\n<p>identifier are valid with main method.</p>\n<ol start=\"7\">\n<li>What is the extension of java code files?</li>\n<li>a) .class</li>\n<li>b) .java</li>\n<li>c) .txt</li>\n<li>d) .js</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Java files have .java extension.</p>\n<ol start=\"8\">\n<li>What is the extension of compiled java classes?</li>\n<li>a) .class</li>\n<li>b) .java</li>\n<li>c) .txt</li>\n<li>d) .js</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: The compiled java files have .class extension.</p>\n<ol start=\"9\">\n<li>How can we identify whether a compilation unit is class or interface from a .class file?</li>\n<li>a) Java source file header</li>\n<li>b) Extension of compilation unit</li>\n<li>c) We cannot differentiate between class and interface</li>\n<li>d) The class or interface name should be postfixed with unit type</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: a</p>\n<p>Explanation: The Java source file contains a header that declares the type of class or</p>\n<p>interface, its visibility with respect to other classes, its name and any superclass it may</p>\n<p>extend, or interface it implements.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ol start=\"10\">\n<li>What is use of interpreter?</li>\n<li>a) They convert bytecode to machine language code</li>\n<li>b) They read high level code and execute them</li>\n<li>c) They are intermediated between JIT and JVM</li>\n<li>d) It is a synonym for JIT</li>\n</ol>\n<p>View Answer</p>\n<p>Answer: b</p>\n<p>Explanation: Interpreters read high level language (interprets it) and execute the program.</p>\n<p>Interpreters are normally not passing through byte-code and jit compilation.</p>\n<p>EXCEPTIONS IN OOP JAVA</p>\n<p>0 Most Asked Java Exception Handling Interview Questions And Answers</p>\n<p>1) What is an exception?</p>\n<p>Exception is an abnormal condition which occurs during the execution of a program and</p>\n<p>disrupts normal flow of the program. This exception must be handled properly. If it is not</p>\n<p>handled, program will be terminated abruptly.</p>\n<p>2) How the exceptions are handled in java? OR Explain exception handling mechanism in</p>\n<p>java?</p>\n<p>Exceptions in java are handled using try, catch and finally blocks.</p>\n<p>try block : The code or set of statements which are to be monitored for exception are kept</p>\n<p>in this block.</p>\n<p>catch block : This block catches the exceptions occurred in the try block.</p>\n<p>finally block : This block is always executed whether exception is occurred in the try block or</p>\n<p>not and occurred exception is caught in the catch block or not.</p>\n<p>3) What is the difference between error and exception in java?</p>\n<p>Errors are mainly caused by the environment in which an application is running. For</p>\n<p>example, OutOfMemoryError happens when JVM runs out of memory. Where as</p>\n<p>exceptions are mainly caused by the application itself. For example, NullPointerException</p>\n<p>occurs when an application tries to access null object.</p>\n<p>Click here to see more about Error Vs Exception in java.</p>\n<p>4) Can we keep other statements in between try, catch and finally blocks?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>No. We shouldn&rsquo;t write any other statements in between try, catch and finally blocks. They</p>\n<p>form a one unit.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>try</p>\n<p>{</p>\n<p>&nbsp;// Statements to be monitored for exceptions</p>\n<p>}</p>\n<p>&nbsp;</p>\n<p>//You can't keep statements here</p>\n<p>&nbsp;</p>\n<p>catch(Exception ex)</p>\n<p>{</p>\n<p>&nbsp;//Cathcing the exceptions here</p>\n<p>}</p>\n<p>&nbsp;</p>\n<p>//You can't keep statements here</p>\n<p>&nbsp;</p>\n<p>finally</p>\n<p>{</p>\n<p>&nbsp;// This block is always executed</p>\n<p>}</p>\n<p>5) Can we write only try block without catch and finally blocks?</p>\n<p>No, It shows compilation error. The try block must be followed by either catch or finally</p>\n<p>block. You can remove either catch block or finally block but not both.</p>\n<p>6) There are three statements in a try block &ndash; statement1, statement2 and statement3.</p>\n<p>After that there is a catch block to catch the exceptions occurred in the try block. Assume</p>\n<p>that exception has occurred in statement2. Does statement3 get executed or not?</p>\n<p>No. Once a try block throws an exception, remaining statements will not be executed.</p>\n<p>control comes directly to catch block.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>7) What is unreachable catch block error?</p>\n<p>When you are keeping multiple catch blocks, the order of catch blocks must be from most</p>\n<p>specific to most general ones. i.e sub classes of Exception must come first and super classes</p>\n<p>later. If you keep super classes first and sub classes later, compiler will show unreachable</p>\n<p>catch block error.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>19</p>\n<p>20</p>\n<p>21</p>\n<p>22</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;int i = Integer.parseInt(\"abc\"); //This statement throws NumberFormatException</p>\n<p>&nbsp;}</p>\n<p>&nbsp;</p>\n<p>&nbsp;catch(Exception ex)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This block handles all exception types\");</p>\n<p>&nbsp;}</p>\n<p>&nbsp;</p>\n<p>&nbsp;catch(NumberFormatException ex)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;//Compile time error</p>\n<p>&nbsp;//This block becomes unreachable as</p>\n<p>&nbsp;//exception is already caught by above catch block</p>\n<p>&nbsp;}</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>8) Explain the hierarchy of exceptions in java?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Click here to see the hierarchy of exceptions in java.</p>\n<p>9) What are run time exceptions in java. Give example?</p>\n<p>The exceptions which occur at run time are called as run time exceptions. These exceptions</p>\n<p>are unknown to compiler. All sub classes of java.lang.RunTimeException and java.lang.Error</p>\n<p>are run time exceptions. These exceptions are unchecked type of exceptions. For example,</p>\n<p>NumberFormatException, NullPointerException, ClassCastException,</p>\n<p>ArrayIndexOutOfBoundException, StackOverflowError etc.</p>\n<p>10) What is OutOfMemoryError in java?</p>\n<p>OutOfMemoryError is the sub class of java.lang.Error which occurs when JVM runs out of</p>\n<p>memory.</p>\n<p>11) what are checked and unchecked exceptions in java?</p>\n<p>Checked exceptions are the exceptions which are known to compiler. These exceptions are</p>\n<p>checked at compile time only. Hence the name checked exceptions. These exceptions are</p>\n<p>also called compile time exceptions. Because, these exceptions will be known during</p>\n<p>compile time.</p>\n<p>Unchecked exceptions are those exceptions which are not at all known to compiler. These</p>\n<p>exceptions occur only at run time. These exceptions are also called as run time exceptions.</p>\n<p>All sub classes of java.lang.RunTimeException and java.lang.Error are unchecked</p>\n<p>exceptions.</p>\n<p>Click here to see more about checked and unchecked exceptions.</p>\n<p>12) What is the difference between ClassNotFoundException and NoClassDefFoundError</p>\n<p>in java?</p>\n<p>Click here to see the differences between ClassNotFoundException and</p>\n<p>NoClassDefFoundError in java.</p>\n<p>13) Can we keep the statements after finally block If the control is returning from the</p>\n<p>finally block itself?</p>\n<p>No, it gives unreachable code error. Because, control is returning from the finally block</p>\n<p>itself. Compiler will not see the statements after it. That&rsquo;s why it shows unreachable code</p>\n<p>error.</p>\n<p>14) Does finally block get executed If either try or catch blocks are returning the control?</p>\n<p>Yes, finally block will be always executed no matter whether try or catch blocks are</p>\n<p>returning the control or not.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>15) Can we throw an exception manually? If yes, how?</p>\n<p>Yes, we can throw an exception manually using throw keyword. Syntax for throwing an</p>\n<p>exception manually is</p>\n<p>throw InstanceOfThrowableType;</p>\n<p>Below example shows how to use throw keyword to throw an exception manually.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>try</p>\n<p>{</p>\n<p>&nbsp;NumberFormatException ex = new NumberFormatException(); //Creating an object to NumberFormatException explicitly</p>\n<p>&nbsp;</p>\n<p>&nbsp;throw ex; //throwing NumberFormatException object explicitly using throw keyword</p>\n<p>}</p>\n<p>catch(NumberFormatException ex)</p>\n<p>{</p>\n<p>&nbsp;System.out.println(\"explicitly thrown NumberFormatException object will be caught here\");</p>\n<p>}</p>\n<p>Click here to see more about throw keyword.</p>\n<p>16) What is Re-throwing an exception in java?</p>\n<p>Exceptions raised in the try block are handled in the catch block. If it is unable to handle</p>\n<p>that exception, it can re-throw that exception using throw keyword. It is called re-throwing</p>\n<p>an exception.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>try</p>\n<p>{</p>\n<p>&nbsp;String s = null;</p>\n<p>&nbsp;System.out.println(s.length()); //This statement throws NullPointerException</p>\n<p>}</p>\n<p>catch(NullPointerException ex)</p>\n<p>{</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>&nbsp;System.out.println(\"NullPointerException is caught here\");</p>\n<p>&nbsp;</p>\n<p>&nbsp;throw ex; //Re-throwing NullPointerException</p>\n<p>}</p>\n<p>17) What is the use of throws keyword in java?</p>\n<p>Click here to see the uses of throws keyword in java.</p>\n<p>18) Why it is always recommended that clean up operations like closing the DB resources</p>\n<p>to keep inside a finally block?</p>\n<p>Because finally block is always executed whether exceptions are raised in the try block or</p>\n<p>not and raised exceptions are caught in the catch block or not. By keeping the clean up</p>\n<p>operations in finally block, you will ensure that those operations will be always executed</p>\n<p>irrespective of whether exception is occurred or not.</p>\n<p>MORE ON EXCEPTIONS</p>\n<p>n exception is an abnormal condition which occurs during run time and disrupts the normal flow of</p>\n<p>the program. This exception must be handled to maintain the normal flow of the program. If this</p>\n<p>exception is not handled properly, the rest of the program will not be executed. Hence, causing</p>\n<p>the abrupt termination of the program. Therefore, you must handle the exceptions for the smooth</p>\n<p>flow of the program. To handle the run time exceptions, one mechanism is provided in java and it</p>\n<p>is called exception handling.</p>\n<p>Let&rsquo;s see some of the exceptions and their handling using try and catch blocks.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;Integer I = new Integer(\"abc\"); //This statement throws NumberFormatException</p>\n<p>&nbsp;System.out.println(\"This statement will not be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>In the above example, Line 7 throws NumberFormatException. This causes the abrupt termination</p>\n<p>of the program i.e remaining statement (Line 8) will not be executed. To make it run normally,</p>\n<p>enclose the statement which is throwing an exception in try-catch blocks. This is shown below,</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;Integer I = new Integer(\"abc\"); //This statement throws NumberFormatException</p>\n<p>&nbsp;}</p>\n<p>&nbsp;catch (Exception e)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"exception caught\");</p>\n<p>&nbsp;}</p>\n<p>&nbsp;System.out.println(\"Now, This statement will also be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>Below example throws ArithmaticException.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;int i = 1000/0; //This statement throws ArithmaticException : / by zero</p>\n<p>&nbsp;System.out.println(\"This statement will not be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>Below example shows how ArithmaticException can be handled using try-catch blocks.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;int i = 1000/0; //This statement throws ArithmaticException : / by zero</p>\n<p>&nbsp;}</p>\n<p>&nbsp;catch (Exception e)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"Exception Caught\");</p>\n<p>&nbsp;}</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>&nbsp;System.out.println(\"Now, This statement will also be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>This example throws ArrayIndexOutOfBoundsException.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;String s = args[1]; //This statement throws ArrayIndexOutOfBoundsException</p>\n<p>&nbsp;System.out.println(\"This statement will not be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>and this can be handled using try-catch blocks.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;String s = args[1]; //This statement throws ArrayIndexOutOfBoundsException</p>\n<p>&nbsp;}</p>\n<p>&nbsp;catch (Exception e)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"Exception Caught\");</p>\n<p>&nbsp;}</p>\n<p>&nbsp;System.out.println(\"Now, This statement will also be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>Below example throws ClassCastException.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;Object o = new Object();</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>&nbsp;ExceptionHandling e = (ExceptionHandling) o; //This statement throws ClassCastException</p>\n<p>&nbsp;System.out.println(\"This statement will not be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>Below example shows handling of ClassCastException using try-catch blocks.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>19</p>\n<p>20</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;Object o = new Object();</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;ExceptionHandling e = (ExceptionHandling) o; //This statement throws ClassCastException</p>\n<p>&nbsp;}</p>\n<p>&nbsp;catch (Exception e)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"Exception Caught\");</p>\n<p>&nbsp;}</p>\n<p>&nbsp;System.out.println(\"Now, This statement will also be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>Below example throws NullPointerException.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;String s = null;</p>\n<p>&nbsp;System.out.println(s.length()); //This statement throws NullPointerException</p>\n<p>&nbsp;System.out.println(\"This statement will not be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>and this example shows how NullPointerException can be handled using try-catch blocks.</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>public class ExceptionHandling</p>\n<p>{</p>\n<p>&nbsp;public static void main(String[] args)</p>\n<p>&nbsp;{</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>8</p>\n<p>9</p>\n<p>10</p>\n<p>11</p>\n<p>12</p>\n<p>13</p>\n<p>14</p>\n<p>15</p>\n<p>16</p>\n<p>17</p>\n<p>18</p>\n<p>19</p>\n<p>20</p>\n<p>&nbsp;System.out.println(\"This statement will be executed\");</p>\n<p>&nbsp;String s = null;</p>\n<p>&nbsp;try</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(s.length()); //This statement throws NullPointerException</p>\n<p>&nbsp;}</p>\n<p>&nbsp;catch (Exception e)</p>\n<p>&nbsp;{</p>\n<p>&nbsp;System.out.println(\"Exception Caught\");</p>\n<p>&nbsp;}</p>\n<p>&nbsp;System.out.println(\"Now, This statement will also be executed\");</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>JAVA FX BASICS</p>\n<p>Basic JavaFX Concepts</p>\n<ul>\n<li>Q: To create a GUI using JavaFX, which class must be extended?</li>\n<li>A: The Application class, in the package javafx.application</li>\n<li>Q: Which method in the Application class must be overridden?</li>\n<li>A: The start method</li>\n<li>Q: When a JavaFX GUI is launched, the start method is called. What object is passed</li>\n</ul>\n<p>to start, and what must the programmer do with it?</p>\n<ul>\n<li>A: A Stage object (from javafx.stage) is passed, and the programmer must give it</li>\n</ul>\n<p>a Scene object (from javafx.scene)</p>\n<ul>\n<li>Q: A Scene object represents the root of a scene graph. What is a scene graph composed</li>\n</ul>\n<p>of?</p>\n<ul>\n<li>A: A scene graph is a hierarchical arrangement of Node objects</li>\n</ul>\n<p>(from javax.scene). Node is the base class that all classes involved in JavaFX GUIs must</p>\n<p>extend, including controls, shapes, and layout containers.</p>\n<p>1) What is JavaFX?</p>\n<p>JavaFX is a software platform for creating desktop applications or internet application. It</p>\n<p>uses java library. It can run various devices such as Desktop Computer, Mobile, TVs etc.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>2) What are various features of JavaFX?</p>\n<p>There are various features of JavaFX:</p>\n<ul>\n<li>It is written in Java.</li>\n<li>It provides an application named scene Builder.</li>\n<li>It is swing interoperability.</li>\n<li>It also provide CSS like styling.</li>\n<li>It has rich set of API&rsquo;s to develop GUI application like 2D and 3D etc.</li>\n</ul>\n<p>3) Who is the developer of JavaFX?</p>\n<p>Chris Oliver is the developer of JavaFX.</p>\n<p>4) What are the important packages of JavaFX API?</p>\n<p>There are various important packages of JavaFX API:</p>\n<ul>\n<li>javafx.animation</li>\n<li>javafx.application</li>\n<li>javafx.css</li>\n<li>javafx.event</li>\n<li>javafx.geometry etc.</li>\n</ul>\n<p>5) What is Streamer?</p>\n<p>Streamer is an open source media engine of JavaFX.</p>\n<p>6) What are the three components of JavaFX application?</p>\n<p>There are three components of JavaFX application:</p>\n<ul>\n<li>Stage: It contains all the object of JavaFX.</li>\n<li>Scene: It represents the physical contents of JavaFX application.</li>\n<li>Nodes: It is the package of JavaFX.scene that represents a node.</li>\n</ul>\n<p>7) Which method is used to create JavaFX application?</p>\n<p>Start() method is used to create JavaFX application.</p>\n<p>8) What are three life cycle methods of JavaFX application?</p>\n<p>There are three life cycle methods of JavaFX application.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<ul>\n<li>Start()</li>\n<li>Stop()</li>\n<li>Init()</li>\n</ul>\n<p>9) How can we create a class of sample application in JavaFX?</p>\n<p>In JavaFX, we can create a class of sample application by using following codes:</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>public class JavafxSample extends Application {</p>\n<p>&nbsp;@Override</p>\n<p>&nbsp;public void start(Stage primaryStage) throws Exception {</p>\n<p>&nbsp;}</p>\n<p>}</p>\n<p>10)Which method is used to launch JavaFX application?</p>\n<p>Launch() method is used to launch JavaFX application.</p>\n<p>11) What are the various properties of 2D object in JavaFX?</p>\n<p>In JavaFX, there are various properties of 2D object that are given below:</p>\n<ul>\n<li>Stroke Type</li>\n<li>Stroke Width</li>\n<li>Stroke Fill</li>\n<li>Stroke</li>\n<li>Stroke Line</li>\n<li>Stroke Miter Limit</li>\n</ul>\n<p>12) How can we create a text node in JavaFX?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>In javaFX, we can create a text node by using its package javafx.scene.text.</p>\n<p>Example</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>Text text = new Text();</p>\n<p>13) Which method is used to set the color of text in JavaFX?</p>\n<p>In JavaFX setFill() method is used to set the color of text.</p>\n<p>Example</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>text.setFill(Color.BEIGE);</p>\n<p>14) What are the various transformations in JavaFX?</p>\n<p>There are various transformations in javaFX.</p>\n<ul>\n<li>Translation</li>\n<li>Scaling up and down</li>\n<li>Rotation</li>\n<li>shearing</li>\n</ul>\n<p>15) How can we load an image in javaFX?</p>\n<p>In JavaFX, we can load an image by using following code:</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>7</p>\n<p>&nbsp;//Passing FileInputStream object as a parameter</p>\n<p>FileInputStream inputstream = new FileInputStream(\"C:\\\\images\\\\image.jpg\");</p>\n<p>Image image = new Image(inputstream);</p>\n<p>//Loading image from URL</p>\n<p>//Image image = new Image(new FileInputStream(\"url for the image));</p>\n<p>&nbsp;</p>\n<p>What is OOPS?</p>\n<p>OOPS is abbreviated as Object Oriented Programming system in which programs are</p>\n<p>considered as a collection of objects. Each object is nothing but an instance of a class.</p>\n<p>1) Write basic concepts of OOPS?</p>\n<p>Following are the concepts of OOPS:</p>\n<ol>\n<li>Abstraction</li>\n<li>Encapsulation</li>\n<li>Inheritance 4. Polymorphism</li>\n</ol>\n<p>2) What is a class?</p>\n<p>A class is simply a representation of a type of object. It is the blueprint/plan/template that</p>\n<p>describes the details of an object.</p>\n<p>4) What is an Object?</p>\n<p>An object is an instance of a class. It has its own state, behavior, and identity.</p>\n<p>5) What is Encapsulation?</p>\n<p>Encapsulation is an attribute of an object, and it contains all data which is hidden. That hidden</p>\n<p>data can be restricted to the members of that class.</p>\n<p>Levels are Public, Protected, Private, Internal, and Protected Internal.</p>\n<p>6) What is Polymorphism?</p>\n<p>Polymorphism is nothing but assigning behavior or value in a subclass to something that was</p>\n<p>already declared in the main class. Simply, polymorphism takes more than one form.</p>\n<p>7) What is Inheritance?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Inheritance is a concept where one class shares the structure and behavior defined in another</p>\n<p>class. If Inheritance applied to one class is called Single Inheritance, and if it depends on</p>\n<p>multiple classes, then it is called multiple Inheritance.</p>\n<p>8) What are manipulators?</p>\n<p>Manipulators are the functions which can be used in conjunction with the insertion () operators</p>\n<p>on an object. Examples are endl and setw.</p>\n<p>9) Explain the term constructor</p>\n<p>A constructor is a method used to initialize the state of an object, and it gets invoked at the time</p>\n<p>of object creation. Rules for constructor are:</p>\n<p>Constructor Name should be the same as a class</p>\n<p>name. A constructor must have no return type.</p>\n<p>10) Define Destructor?</p>\n<p>A destructor is a method which is automatically called when the object is made of scope or</p>\n<p>destroyed. Destructor name is also same as class name but with the tilde symbol before the</p>\n<p>name.</p>\n<p>11) What is an Inline function?</p>\n<p>An inline function is a technique used by the compilers and instructs to insert complete body of</p>\n<p>the function wherever that function is used in the program source code.</p>\n<p>12) What is a virtual function?</p>\n<p>A virtual function is a member function of a class, and its functionality can be overridden in its</p>\n<p>derived class. This function can be implemented by using a keyword called virtual, and it can be</p>\n<p>given during function declaration.</p>\n<p>A virtual function can be declared using a token(virtual) in C++. It can be achieved in C/Python</p>\n<p>Language by using function pointers or pointers to function.</p>\n<p>13) What is a friend function?</p>\n<p>A friend function is a friend of a class that is allowed to access to Public, private, or protected</p>\n<p>data in that same class. If the function is defined outside the class cannot access such</p>\n<p>information.</p>\n<p>A friend can be declared anywhere in the class declaration, and it cannot be affected by access</p>\n<p>control keywords like private, public, or protected.</p>\n<p>14) What is function overloading?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Function overloading is a regular function, but it can perform different tasks. It allows the</p>\n<p>creation of several methods with the same name which differ from each other by the type of</p>\n<p>input and output of the function.</p>\n<p>Example</p>\n<p>15) What is operator overloading?</p>\n<p>Operator overloading is a function where different operators are applied and depends on the</p>\n<p>arguments. Operator,-,* can be used to pass through the function, and it has its own</p>\n<p>precedence to execute</p>\n<p>16) What is an abstract class?</p>\n<p>An abstract class is a class which cannot be instantiated. Creation of an object is not possible</p>\n<p>with an abstract class, but it can be inherited. An abstract class can contain only an Abstract</p>\n<p>method. Java allows only abstract method in abstract class while other languages allow</p>\n<p>nonabstract method as well.</p>\n<p>17) What is a ternary operator?</p>\n<p>The ternary operator is said to be an operator which takes three arguments. Arguments and</p>\n<p>results are of different data types, and it depends on the function. The ternary operator is also</p>\n<p>called a conditional operator.</p>\n<p>18) What is the use of finalize method?</p>\n<p>Finalize method helps to perform cleanup operations on the resources which are not currently</p>\n<p>used. Finalize method is protected, and it is accessible only through this class or by a derived</p>\n<p>class.</p>\n<p>19) What are the different types of arguments?</p>\n<p>A parameter is a variable used during the declaration of the function or subroutine, and</p>\n<p>arguments are passed to the function body, and it should match with the parameter defined.</p>\n<p>There are two types of Arguments.</p>\n<p>Call by Value &ndash; Value passed will get modified only inside the function, and it returns</p>\n<p>the same value whatever it is passed into the function.</p>\n<p>Call by Reference &ndash; Value passed will get modified in both inside and outside the</p>\n<p>functions and it returns the same or different value.</p>\n<p>20) What is the super keyword?</p>\n<p>The super keyword is used to invoke the overridden method, which overrides one of its</p>\n<p>superclass methods. This keyword allows to access overridden methods and also to access</p>\n<p>hidden members of the superclass.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>It also forwards a call from a constructor, to a constructor in the superclass.</p>\n<p>21) What is method overriding?</p>\n<p>Method overriding is a feature that allows a subclass to provide the implementation of a method</p>\n<p>that overrides in the main class. It will override the implementation in the superclass by</p>\n<p>providing the same method name, same parameter, and same return type.</p>\n<p>22) What is an interface?</p>\n<p>An interface is a collection of an abstract method. If the class implements an interface, it</p>\n<p>thereby inherits all the abstract methods of an interface.</p>\n<p>Java uses Interface to implement multiple inheritances.</p>\n<p>23) What is exception handling?</p>\n<p>An exception is an event that occurs during the execution of a program. Exceptions can be of</p>\n<p>any type &ndash; Runtime exception, Error exceptions. Those exceptions are adequately handled</p>\n<p>through exception handling mechanism like try, catch, and throw keywords.</p>\n<p>24) What are tokens?</p>\n<p>A compiler recognizes a token, and it cannot be broken down into component elements.</p>\n<p>Keywords, identifiers, constants, string literals, and operators are examples of tokens.</p>\n<p>Even punctuation characters are also considered as tokens. Example: Brackets, Commas,</p>\n<p>Braces, and Parentheses.</p>\n<p>25) What is the main difference between overloading and overriding?</p>\n<p>Overloading is static Binding, whereas Overriding is dynamic Binding. Overloading is nothing</p>\n<p>but the same method with different arguments, and it may or may not return the equal value in</p>\n<p>the same class itself.</p>\n<p>Overriding is the same method names with the same arguments and return types associated</p>\n<p>with the class and its child class.</p>\n<p>26) What is the main difference between a class and an object?</p>\n<p>An object is an instance of a class. Objects hold multiple information, but classes don&rsquo;t have</p>\n<p>any information. Definition of properties and functions can be done in class and can be used by</p>\n<p>the object.</p>\n<p>A class can have sub-classes, while an object doesn&rsquo;t have sub-objects.</p>\n<p>27) What is an abstraction?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Abstraction is a useful feature of OOPS, and it shows only the necessary details to the client of</p>\n<p>an object. Meaning, it shows only required details for an object, not the inner constructors, of an</p>\n<p>object. Example &ndash; When you want to switch on the television, it is not necessary to know the</p>\n<p>inner circuitry/mechanism needed to switch on the TV. Whatever is required to switch on TV will</p>\n<p>be shown by using an abstract class.</p>\n<p>28) What are the access modifiers?</p>\n<p>Access modifiers determine the scope of the method or variables that can be accessed from</p>\n<p>other various objects or classes. There are five types of access modifiers, and they are as</p>\n<p>follows:</p>\n<p>Private</p>\n<p>Protected</p>\n<p>Public</p>\n<p>Friend</p>\n<p>Protected Friend</p>\n<p>29) What are sealed modifiers?</p>\n<p>Sealed modifiers are the access modifiers where the methods can not inherit it. Sealed</p>\n<p>modifiers can also be applied to properties, events, and methods. This modifier cannot be used</p>\n<p>to static members.</p>\n<p>30) How can we call the base method without creating an instance?</p>\n<p>Yes, it is possible to call the base method without creating an instance. And that method should</p>\n<p>be &ldquo;Static method.\"</p>\n<p>Doing Inheritance from that class.-Use Base Keyword from a derived class.</p>\n<p>31) What is the difference between new and override?</p>\n<p>The new modifier instructs the compiler to use the new implementation instead of the base</p>\n<p>class function. Whereas, Override modifier helps to override the base class function.</p>\n<p>32) What are the various types of constructors?</p>\n<p>There are three types of constructors:</p>\n<p>&ndash; Default Constructor &ndash; With no parameters.</p>\n<p>&ndash; Parametric Constructor &ndash; With Parameters. Create a new instance of a class and alsopassing</p>\n<p>arguments simultaneously.</p>\n<p>&ndash; Copy Constructor &ndash; Which creates a new object as a copy of an existing object.</p>\n<p>33) What is early and late Binding?</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>Early binding refers to the assignment of values to variables during design time, whereas late</p>\n<p>Binding refers to the assignment of values to variables during run time.</p>\n<p>34) What is 'this' pointer?</p>\n<p>THIS pointer refers to the current object of a class. THIS keyword is used as a pointer which</p>\n<p>differentiates between the current object with the global object. It refers to the current object.</p>\n<p>35) What is the difference between structure and a class?</p>\n<p>The default access type of a Structure is public, but class access type is private. A structure is</p>\n<p>used for grouping data, whereas a class can be used for grouping data and methods.</p>\n<p>Structures are exclusively used for data, and it doesn't require strict validation, but classes are</p>\n<p>used to encapsulate and inherent data, which requires strict validation.</p>\n<p>36) What is the default access modifier in a class?</p>\n<p>The default access modifier of a class is Private by default.</p>\n<p>37) What is a pure virtual function?</p>\n<p>A pure virtual function is a function which can be overridden in the derived class but cannot be</p>\n<p>defined. A virtual function can be declared as Pure by using the operator =0.</p>\n<p>Example -</p>\n<p>[crayon-5f2cf66ff2e6f715458999/]</p>\n<p>38) What are all the operators that cannot be overloaded?</p>\n<p>Following are the operators that cannot be overloaded -.</p>\n<ol>\n<li>Scope Resolution (::)</li>\n<li>Member Selection (.)</li>\n<li>Member selection through a pointer to function (.*)</li>\n</ol>\n<p>39) What is dynamic or run time polymorphism?</p>\n<p>Dynamic or Run time polymorphism is also known as method overriding in which call to an</p>\n<p>overridden function is resolved during run time, not at the compile time. It means having two or</p>\n<p>more methods with the same name, same signature but with different implementation.</p>\n<p>40) Do we require a parameter for constructors?</p>\n<p>No, we do not require a parameter for constructors.</p>\n<p>41) What is a copy constructor?</p>\n<p>This is a special constructor for creating a new object as a copy of an existing object. There will</p>\n<p>always be only one copy constructor that can be either defined by the user or the system.</p>\n<p>I&rsquo;M MAN XTRACE DESIGN SERVICES</p>\n<p>CALL FOR A QUICK RESPONSE &lt;B&gt;0559220820/0548926540/0248387403&lt;/B&gt;</p>\n<p>42) What does the keyword virtual represented in the method definition?</p>\n<p>It means we can override the method.</p>\n<p>43) Whether static method can use nonstatic members?</p>\n<p>False.</p>\n<p>44) What are a base class, subclass, and superclass?</p>\n<p>The base class is the most generalized class, and it is said to be a root class.</p>\n<p>A Subclass is a class that inherits from one or more base classes.</p>\n<p>The superclass is the parent class from which another class inherits.</p>\n<p>45) What is static and dynamic Binding?</p>\n<p>Binding is nothing but the association of a name with the class. Static Binding is a binding in</p>\n<p>which name can be associated with the class during compilation time, and it is also called as</p>\n<p>early Binding.</p>\n<p>Dynamic Binding is a binding in which name can be associated with the class during execution</p>\n<p>time, and it is also called as Late Binding.</p>\n<p>46) How many instances can be created for an abstract class?</p>\n<p>Zero instances will be created for an abstract class. In other words, you cannot create an</p>\n<p>instance of an Abstract Class.</p>\n<p>47) Which keyword can be used for overloading?</p>\n<p>Operator keyword is used for overloading.</p>\n<p>48) What is the default access specifier in a class definition?</p>\n<p>Private access specifier is used in a class definition.</p>\n<p>49) Which OOPS concept is used as a reuse mechanism?</p>\n<p>Inheritance is the OOPS concept that can be used as a reuse mechanism.</p>\n<p>50) Which OOPS concept exposes only the necessary information to the calling functions?</p>\n<p>Encapsulation</p>",
            "<h2>SYSTEMS ANALYSIS AND DESIGN</h2> <p><u>SYSTEM ANALYSIS QUIZ 2</u></p>\n<ol>\n<li>An information system consists of</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>software, database, and manual processes</li>\n<li>applications, screens, and database</li>\n<li>software, hardware, and network</li>\n<li>software, hardware, and database</li>\n<li>A planned undertaking that has a beginning and an end and produces some result is called</li>\n</ol>\n<p>a Answer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .</p>\n<p>&nbsp;</p>\n<ol start=\"3\">\n<li>What are the three parts of a System Vision Document? (choose three)</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>System capabilities</li>\n<li>Project timetable or schedule</li>\n<li>Business benefits</li>\n<li>Solution description</li>\n<li>Estimated project costs</li>\n<li>Problem description</li>\n<li>The group that provides direction for the configuration of the new system in the existing computing environment are called<u> </u>.</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Support staff</li>\n<li>Technical stakeholders</li>\n<li>System programmers</li>\n<li>Operational stakeholders</li>\n<li>Persons who regularly interact with the system as part of their jobs are called .</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>executive stakeholders</li>\n<li>operational stakeholders</li>\n<li>user stakeholders</li>\n<li>client stakeholders</li>\n<li>In iterative development, an iteration usually lasts about six</li>\n</ol>\n<p>&nbsp;</p>\n<p>True False</p>\n<ol start=\"7\">\n<li>A diagram that shows the overall structure of a system as it exists after it is deployed is called what?</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Design class diagram</li>\n<li>Architectural class diagram</li>\n<li>System and subsystem diagram</li>\n<li>Software components diagram</li>\n<li>Questions that have a simple, definitive answer are called</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>close-ended</li>\n<li>multiple choice</li>\n<li>true/false</li>\n<li>open-ended</li>\n<li>Determining team members and assigning responsibilities is done in which Core Process?</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>6</li>\n<li>5</li>\n<li>4</li>\n<li>2</li>\n<li>1</li>\n<li>3</li>\n<li>Which of the following is normally the most time-consuming and resource-expensive operation?</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Building prototypes</li>\n<li>Interview stakeholders</li>\n<li>Observing business processes</li>\n<li>Researching vendor solutions</li>\n<li>Designing the database schema is included in which Core Process? Select one:</li>\n<li>6</li>\n<li>1</li>\n<li>2</li>\n<li>4</li>\n<li>5</li>\n<li>3</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"12\">\n<li>requirements describe how access to the software application will be controlled and data will be</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"13\">\n<li>During a fact-finding interview, an important guideline is<u> </u>. Select one:</li>\n<li>not to waste project time by including too many analysts</li>\n<li>to include the client in important decisions</li>\n<li>to include as many users as possible</li>\n<li>to probe to get sufficient details</li>\n<li>Which of the following statements is correct about questionnaires? Select one:</li>\n<li>Questionnaires are the most frequently used method to gather user</li>\n<li>Stakeholders always return questionnaires that contain many open-ended questions.</li>\n<li>Questionnaires are well suited to help you learn about processes, workflows, or</li>\n<li>Questionnaires have a limited and specific use in information</li>\n<li>What do we call the person or group who provides funding for the development of the new system?</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>Board of directors</li>\n<li>Oversight committee</li>\n<li>Department head</li>\n<li>Client</li>\n<li>The \"+\" in FURPS+ includes which of the following types of requirements? (choose two) Select one or more:</li>\n<li>User interface requirements</li>\n<li>Reliability constraints</li>\n<li>Performance constraints</li>\n<li>Design constraints</li>\n<li>Nonfunctional requirements</li>\n<li>Supportability requirements</li>\n<li>The primary difference between a work breakdown structure and a work sequence draft is that the work sequence draft shows .</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>the estimated effort of tasks</li>\n<li>the sequence of tasks</li>\n<li>the additionally deployment tasks</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>the day to day assignments</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"18\">\n<li>A</li>\n</ol>\n<p>transaction.</p>\n<p>&nbsp;</p>\n<p>is the sequence of processing steps that completely handles one business</p>\n<p>&nbsp;</p>\n<p>Answer: Workflow</p>\n<ol start=\"19\">\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>is an important part of each interview. Select one:</li>\n<li>Follow-up</li>\n<li>Finalize processing decisions</li>\n<li>Review of the requirements models</li>\n<li>An agenda</li>\n<li>A representation of some aspect of the system being built is a<u> </u>. Select one:</li>\n<li>technique</li>\n<li>requirement</li>\n<li>user interface</li>\n<li>model</li>\n<li>As part of the interview process, any unresolved issues should be<u> </u>. Select one:</li>\n<li>brought to the attention of the appropriate manager</li>\n<li>given a tentative resolution</li>\n<li>put on an open-items list</li>\n<li>noted in the analyst's meeting notes</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"22\">\n<li>Another term that is used to define a computer application is Answer .</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"23\">\n<li>A document that identifies and lists all of the tasks to be completed within an iteration is</li>\n</ol>\n<p>called a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .</p>\n<ol start=\"24\">\n<li>Application architecture is used to refer to Select one:</li>\n<li>the organization and configuration of all software solutions into information systems</li>\n<li>the architectural structure of the subsystems within a software application</li>\n<li>the application of the information system to solve business problems</li>\n<li>the relationship between software applications and the areas of the organization that they support</li>\n<li>One important reason for prioritizing requirements is to .</li>\n</ol>\n<p>&nbsp;</p>\n<p>Select one:</p>\n<ol>\n<li>avoid confusing the users</li>\n<li>assign work within an iteration</li>\n<li>speed up the project</li>\n<li>avoid scope creep</li>\n<li>Those skills, steps, guides, and tools that support and lead up to the actual programming of the system are referred to as .</li>\n</ol>\n<p>Answer : System Analysis and Design</p>\n<ol start=\"27\">\n<li>A Work Breakdown Structure is the first step in building a project Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"28\">\n<li>A <em>work sequence draft </em>provides three benefits to a project. Which of the following are included in those benefits?</li>\n</ol>\n<p>Select one or more:</p>\n<ol>\n<li>Anticipate resource needs</li>\n<li>Schedule user involvement</li>\n<li>Add missing tasks</li>\n<li>Assign resources to tasks</li>\n<li>Provide task descriptions</li>\n<li>Measure progress</li>\n<li>Those activities that enable a person to understand and specify what the new system</li>\n</ol>\n<p>should accomplish are usually referred to as Answer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>. Answer: System Analysis</p>\n<ol start=\"30\">\n<li>In iterative development the system is grown Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"31\">\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>requirements are based on the procedures and rules that the organization uses to run its business.</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>System</li>\n<li>Physical</li>\n<li>Functional</li>\n<li>Logical</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"32\">\n<li>A development process where the system is grown piece by piece is called Answer</li>\n</ol>\n<p>.</p>\n<p>Answer: Iterative development</p>\n<ol start=\"33\">\n<li>Determine the major subsystems and assigning them to an iteration is done in which Core Process?</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>1</li>\n<li>5</li>\n<li>3</li>\n<li>4</li>\n<li>6</li>\n<li>2</li>\n<li>List the three components that are included in a System Vision Answers:\n<ul>\n<li>Problem Description</li>\n<li>System capabilities</li>\n<li>Business benefits</li>\n</ul>\n</li>\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>requirements are most often documented in graphical and textual models. Select one:</li>\n<li>Security</li>\n<li>Technical</li>\n<li>Nonfunctional</li>\n<li>Functional</li>\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>requirements are characteristics of the system other than the business procedures it must</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>Nonfunctional</li>\n<li>System</li>\n<li>Physical</li>\n<li>Implementation</li>\n<li>What does the Acronym UML stand for? Select one:</li>\n<li>Unix Modeling Language</li>\n<li>Unified Modeling Language</li>\n<li>User Mode Listings</li>\n<li>User Modification Language</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"38\">\n<li>Clients play what role in the development of the new system? Select one:</li>\n<li>Define business processes</li>\n<li>Fund the project</li>\n<li>Lead the project team</li>\n<li>Develop the project plan</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"39\">\n<li>An describes the sequential flow of user</li>\n</ol>\n<p>Answer: Workflow</p>\n<p>&nbsp;</p>\n<ol start=\"40\">\n<li>What is the single activity that usually requires the most time during a project? Select one:</li>\n<li>Acceptance testing</li>\n<li>Design the screens and reports</li>\n<li>Meeting with users</li>\n<li>Programming</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>updated.</p>\n<p>&nbsp;</p>\n<p>requirements describe how a system is configured, monitored, maintained, and</p>\n<p>&nbsp;</p>\n<p>Answer: Supportability</p>\n<p>&nbsp;</p>\n<ol start=\"42\">\n<li>The term \"I'll know it when I see it\" refers to what method of requirements definition. Select one:</li>\n<li>User interviews</li>\n<li>Observing business procedures</li>\n<li>Collecting active user comments</li>\n<li>Questionnaires</li>\n<li>Asking many detailed, probing questions during an initial interview usually<u> </u>. Select one:</li>\n<li>is necessary to understand the business process</li>\n<li>indicates that the analyst does not understand the business</li>\n<li>makes the users uncomfortable</li>\n<li>can wait until follow-up interviews</li>\n<li>What is the purpose of an iteration recap? Select one:</li>\n<li>To review the project processes</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>To rework the project schedule</li>\n<li>To give performance reviews to the programmers</li>\n<li>To ensure the correct deliverable was produced</li>\n<li>If the analysts understand the major business processes, it is not usually necessary to create a comprehensive list of all business</li>\n</ol>\n<p>Select one:</p>\n<p>True False</p>\n<ol start=\"46\">\n<li>The purpose of a class diagram is to<u> </u>. Select one:</li>\n<li>document all of the programming classes</li>\n<li>document the methods of classes in the new system</li>\n<li>document the information requirements in the new system</li>\n<li>document the hierarchy of class relationships</li>\n<li>The boxes on a class diagram can be thought of as a particular<u> </u>. Select one:</li>\n<li>set of procedures</li>\n<li>set of attributes</li>\n<li>set of objects</li>\n<li>set of relationships</li>\n<li>A fact finding user interview can usually be completed in one comprehensive Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"49\">\n<li>Which of the following items is NOT a part of the application architecture? Select one:</li>\n<li>virtual private networks</li>\n<li>programming languages and development tools</li>\n<li>software</li>\n<li>user-interface technology</li>\n<li>What is the term that is used to describe all the activities to build, launch, and maintain an information system?</li>\n</ol>\n<p>&nbsp;</p>\n<p>Answer:</p>\n<ol start=\"51\">\n<li>During analysis activities the project team build two types of diagrams: Use Case diagram and Package</li>\n</ol>\n<p>Select one:</p>\n<p>True False</p>\n<ol start=\"52\">\n<li>A series of formulas that describe technical aspects of a system is a(n) Select one:</li>\n<li>descriptive</li>\n<li>textual</li>\n<li>graphical</li>\n<li>mathematical</li>\n<li>Diagrams and schematic representations of some aspect of a system are examples of a</li>\n</ol>\n<p><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>model.</p>\n<p>Select one:</p>\n<ol>\n<li>graphical</li>\n<li>textual</li>\n<li>logical</li>\n<li>mathematical</li>\n<li>Questionnaires can be used to ask questions that<u> </u>. Select one:</li>\n<li>determine user opinions</li>\n<li>detail user procedures</li>\n<li>determine the stakeholders</li>\n<li>define system functions</li>\n<li>What are the two primary benefits of reviewing the documentation of existing inputs, outputs, and procedures. (choose 2)</li>\n</ol>\n<p>Select one or more:</p>\n<ol>\n<li>Obtain a preliminary understanding</li>\n<li>Encourages the users to prepare for interviews</li>\n<li>Help build models of existing procedures</li>\n<li>Ensure complete documentation of procedures</li>\n<li>Serve as visual aids in interview discussions</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Have a repository of existing documentation</li>\n<li>A package diagram is useful to document the various subsystems in a Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"57\">\n<li>Questionnaires can be useful in information gathering when users<u> </u>. Select one:</li>\n<li>are widely distributed geographically</li>\n<li>need prompting to respond to questions</li>\n<li>are not well-informed</li>\n<li>do not have time for interviews</li>\n<li>What is usually the end result of an iteration? Select one:</li>\n<li>A set of specifications</li>\n<li>A piece of working code</li>\n<li>A project plan</li>\n<li>The final system</li>\n<li>The term technology architecture refers to</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>the hardware, network, and system software</li>\n<li>the combination of information systems and the hardware infrastructure</li>\n<li>the configuration of the old technology and new technology within an organization</li>\n<li>the software resources which make up the information systems</li>\n<li>List five steps in the activity to interview users and other Answers:</li>\n</ol>\n<p>prepare detailed questions,</p>\n<p>meet with individuals or groups of users, obtain and discuss answers to the questions, document the answers,</p>\n<table>\n<tbody>\n<tr>\n<td width=\"195\">&nbsp;</td>\n</tr>\n<tr>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p><br /> follow up as needed in future meetings or interviews.</p>\n<ol start=\"61\">\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>is an important part of the follow-up after an interview. Select one:</li>\n<li>Building models</li>\n<li>Making copies of everyone's notes</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Setting the time for the next meeting</li>\n<li>Establishing documentation guidelines</li>\n<li>A person that functions as an architect to plan, capture the vision, and understand the needs for a new system is often called a .</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>software engineer</li>\n<li>software developer</li>\n<li>systems analyst</li>\n<li>programmer analyst</li>\n<li>The S in the FURPS acronym stands for<u> </u>. Select one:</li>\n<li>Software requirements</li>\n<li>Screen and reporting requirements</li>\n<li>System requirements</li>\n<li>Security requirements</li>\n<li>Core Process 3 involves defining in great detail what the information system needs to accomplish in order to provide the organization with the desired</li>\n</ol>\n<p>Select one:</p>\n<p>True False</p>\n<ol start=\"65\">\n<li>An information system development process that emphasizes flexibility to embrace change is called .</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>Agile development</li>\n<li>Iterative development</li>\n<li>Iterative project planning</li>\n<li>Adaptive development projects</li>\n<li>Which two answers identify the two middle core processes, i.e. core process 3 and 4? (choose two)</li>\n</ol>\n<p>Select one or more:</p>\n<ol>\n<li>Build and test the system</li>\n<li>Understand the details of the problem</li>\n<li>Design the components</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>Plan and monitor the project</li>\n<li>Two important goals or steps within Core Process one are<u> </u>and<u> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>. Select one:</li>\n<li>identify the solution objective;</li>\n</ol>\n<p>obtain project approval</p>\n<ol>\n<li>identify the problem; choose the project manager</li>\n<li>describe the solution; obtain project approval</li>\n<li>estimate the cost; identify the iterations</li>\n<li>One of the dangers in researching vendor solutions is that users and analysts .</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>may discover and desire too many unimportant \"bells and whistles\"</li>\n<li>may not understand the vendor solution</li>\n<li>may want to buy one of these solutions prematurely</li>\n<li>may discover different methods to perform business processes</li>\n<li>Every successful interview requires<u> </u>. Select one:</li>\n<li>preparation</li>\n<li>open-ended questions</li>\n<li>an activity diagram</li>\n<li>finding the exception conditions</li>\n<li>To design the database schema, information from which diagram is the most important? Select one:</li>\n<li>package diagram</li>\n<li>design class diagram</li>\n<li>class diagram</li>\n<li>network diagram</li>\n<li>Programming is included in which Core Process? Select one:</li>\n<li>2</li>\n<li>1</li>\n<li>4</li>\n<li>5</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>3</li>\n<li>6</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>requirements describe the dependability of a system such as service outages and incorrect processing.</p>\n<p>Answer: Reliability</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"73\">\n<li>The diagram that is most effective in describing the internal steps of a use case is</li>\n</ol>\n<p><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>.</p>\n<p>Select one:</p>\n<ol>\n<li>a workflow diagram</li>\n<li>a package diagram</li>\n<li>a class diagram</li>\n<li>a use case diagram</li>\n<li>What do we call the type of testing that the users perform to ensure that the system meets the business requirements?</li>\n</ol>\n<p>&nbsp;</p>\n<p>Answer:</p>\n<ol start=\"75\">\n<li>Which are the major business themes that guide analysts in fact finding activities? (chose 3)</li>\n</ol>\n<p>Select one or more:</p>\n<ol>\n<li>What are the business processes?</li>\n<li>What information is needed?</li>\n<li>What are the objectives of a business process? (What should it accomplish?)</li>\n<li>How are the business processes performed?</li>\n<li>What is produced by the business process?</li>\n<li>Who performs the business processes?</li>\n<li>Which two of the following are activities of Core Process 3? (choose two) Select one or more:</li>\n<li>Gather detailed information</li>\n<li>Plan the project iterations</li>\n<li>Build an iteration schedule</li>\n<li>Develop user-interface dialogs</li>\n<li>Define test data</li>\n<li>Develop architectural structure</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"77\">\n<li>A diagram that shows the method signatures in each class is called the .</li>\n</ol>\n<p>&nbsp;</p>\n<p>Answer : Design Class Diagram</p>\n<ol start=\"78\">\n<li>An iteration normally only includes three or four of the core Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"79\">\n<li>Another name for a workflow diagram is a(n)<u> </u> Select one:</li>\n<li>activity</li>\n<li>use case</li>\n<li>class</li>\n<li>work sequence</li>\n<li>One way to show multiple, independent alternative paths within an activity diagram is with a<u> </u>.</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>synchronization bar</li>\n<li>activity oval</li>\n<li>swimlane</li>\n<li>decision diamond</li>\n<li>List the six techniques used to gather detailed requirements Answers</li>\n</ol>\n<table>\n<tbody>\n<tr>\n<td width=\"192\">&nbsp;</td>\n</tr>\n<tr>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"82\">\n<li>The strength of closed-ended questions is that they<u> </u>. Select one:</li>\n<li>speed up the interview process</li>\n<li>invite discussion and elaboration</li>\n<li>limit answers to a set of choices</li>\n<li>are easier for the users to answer</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"83\">\n<li>Performing in-depth fact finding to understand details is done as part of which Core Process?</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>6</li>\n<li>4</li>\n<li>5</li>\n<li>2</li>\n<li>1</li>\n<li>3</li>\n<li>The term<u> </u>refers to all the people who have an interest in the successful implementation of the</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>users</li>\n<li>managers</li>\n<li>stakeholders</li>\n<li>clients</li>\n<li>What are the first two models, e.g. diagrams that include the entire system, that are built during the Core Process to discover and understand the details?</li>\n</ol>\n<p>Select one or more:</p>\n<ol>\n<li>Use case diagram</li>\n<li>Workflow diagram</li>\n<li>Work sequence diagram</li>\n<li>Class diagram</li>\n<li>Package diagram</li>\n<li>Screen layouts</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"86\">\n<li>requirements describe interactions between systems, e.g. the method of communication between one system and another</li>\n</ol>\n<p>Answer: Interface</p>\n<ol start=\"87\">\n<li>SDLC stands for what? Select one:</li>\n<li>Software Design Life Cycle</li>\n<li>Systems Design Life Cycle</li>\n<li>Systems Development Life Cycle</li>\n<li>Software Development Life Cycle</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"88\">\n<li>requirements describe constraints such as programming languages, tools, and communication protocols for distributed portions of the</li>\n</ol>\n<p>Answer: Implementation</p>\n<ol start=\"89\">\n<li>Two of the primary elements that are included in a Work Breakdown Structure include: Select one:</li>\n<li>list of tasks and assigned resources</li>\n<li>list of tasks and estimated effort</li>\n<li>sequence of tasks and estimated effort</li>\n<li>subsystem iteration assignments and estimated effort</li>\n<li>Method signatures are included in which diagram? Select one:</li>\n<li>Design class diagram</li>\n<li>Activity diagram</li>\n<li>class diagram</li>\n<li>Package diagram</li>\n<li>Those activities that enable a person to describe in detail how the information systems</li>\n</ol>\n<p>will actually be implemented are called Answer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>. Answer: System Analysis</p>\n<p>&nbsp;</p>\n<ol start=\"92\">\n<li>What type of stakeholders are those that do not use the system on day to day tasks, but use information, such as reports, from the system.</li>\n</ol>\n<p>Select one:</p>\n<ol>\n<li>External stakeholders</li>\n<li>Business stakeholders</li>\n<li>Client stakeholders</li>\n<li>Executive stakeholders</li>\n<li>Agile Development refers to the flexibility that programmers have in taking on various assignments.</li>\n</ol>\n<p>Select one:</p>\n<p>True False</p>\n<ol start=\"94\">\n<li>Detailed design is the thought process of how to program each<u> </u>. Select one:</li>\n<li>use case</li>\n<li>subsystem</li>\n</ol>\n<p>&nbsp;</p>\n<ol>\n<li>screen or report</li>\n<li>package</li>\n</ol>\n<p>&nbsp;</p>\n<ol start=\"95\">\n<li>requirements describe operational characteristics related to users such as work procedures and online</li>\n</ol>\n<p>Answer : Usability</p>\n<p>&nbsp;</p>\n<ol start=\"96\">\n<li><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>is the term used to describe an information system development methodology that emphasizes flexibility and rapid response to anticipate new requirements during</li>\n</ol>\n<p>Answer : Agile Development</p>\n<p>&nbsp;</p>\n<ol start=\"97\">\n<li>When a system is partitioned into pieces, each piece is referred to as a</li>\n</ol>\n<p><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </u>.</p>\n<p>Select one:</p>\n<ol>\n<li>application</li>\n<li>program</li>\n<li>subsystem</li>\n<li>package</li>\n<li>A good way to remember the details of an interview is to use a tape Select one:</li>\n</ol>\n<p>True</p>\n<p>False</p>\n<ol start=\"99\">\n<li>Which of the following describes what the system is required to do? Select one:</li>\n<li>General requirements</li>\n<li>User requirements</li>\n<li>Functional requirements</li>\n<li>Nonfunctional requirements</li>\n<li>An information system often includes the software, the database, and the related manual</li>\n</ol>\n<p>Select one:</p>\n<p>True False</p>",
            "<h2>COMPUTER AND DISCRETE MATHEMATICS</h2> <p>1) If x is a set and the set contains an integer which is neither positive nor negative then the set x is ____________.</p>\n<ol>\n<li>Set is Empty</li>\n</ol>\n<ol>\n<li>Set is Non-empty</li>\n<li>Set is Finite.</li>\n<li>Set is both Non- empty and Finite.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) Set is both Non- empty and Finite.</p>\n<p><strong>Explanation:</strong>&nbsp;The non-empty and finite set is set {0}.</p>\n<p>2) If x &isin; N and x is prime, then x is ________ set.</p>\n<ol>\n<li>Infinite set</li>\n</ol>\n<ol>\n<li>Finite set</li>\n<li>Empty set</li>\n<li>Not a set</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) Infinite set</p>\n<p><strong>Explanation:</strong>&nbsp;There is no extreme prime, so the number of primes is infinite.</p>\n<p>3) If x is a set and the set contains the real number between 1 and 2, then the set is ________.</p>\n<ol>\n<li>Empty set</li>\n</ol>\n<ol>\n<li>Finite set</li>\n<li>Infinite set</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) Infinite set.</p>\n<p><strong>Explanation:</strong>&nbsp;X is an infinite set as there are infinitely many real numbers between 1 and 2.</p>\n<p>4) Which of the following is a subset of set {1, 2, 3, 4}?</p>\n<ol>\n<li>{1, 2}</li>\n</ol>\n<ol>\n<li>{1, 2, 3}</li>\n<li>{1}</li>\n<li>All of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) All of the mentioned</p>\n<p><strong>Explanation:</strong>&nbsp;The subset of set (1, 2, 3, 4} is {1, 2}, {1, 2, 3}, and {1}.</p>\n<p>5) Convert the set x in roster form if set x contains the positive prime number, which divides 72.</p>\n<ol>\n<li>{&empty;}</li>\n</ol>\n<ol>\n<li>{2, 3}</li>\n<li>{2, 3, 7}</li>\n<li>{3, 5, 7}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) {2, 3}</p>\n<p><strong>Explanation:</strong>&nbsp;2 and 3 are the divisors of 72, which are prime. So, the roster form of set x is (2, 3}.</p>\n<p>6) Power set of empty or Null set has exactly _________ subset.</p>\n<ol>\n<li>One</li>\n</ol>\n<ol>\n<li>Two</li>\n<li>Zero</li>\n<li>Three</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) One</p>\n<p><strong>Explanation:</strong>&nbsp;The power set of the Null set has exactly one subset, which is an empty set.</p>\n<p>7) What is the Cartesian product of set A and set B, if the set A = {1, 2} and set B = {a, b}?</p>\n<ol>\n<li>{ (1, a), (1, b), (2, a), (b, b) }</li>\n</ol>\n<ol>\n<li>{ (1, 1), (2, 2), (a, a), (b, b) }</li>\n<li>{ (1, a), (2, a), (1, b), (2, b) }</li>\n<li>{ (1, 1), (a, a), (2, a), (1, b) }</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) { (1, a), (2, a), (1, b), (2, b) }</p>\n<p><strong>Explanation:</strong>&nbsp;A subset R of the Cartesian product A x B is a relation from the set A to the set B.</p>\n<p>8) The members of the set S = {x | x is the square of an integer and x &lt; 100} is ________________</p>\n<ol>\n<li>{0, 2, 4, 5, 9, 55, 46, 49, 99, 81}</li>\n</ol>\n<ol>\n<li>{1, 4, 9, 16}</li>\n<li>{0, 1, 4, 9, 16, 25, 36, 49, 64, 81}</li>\n<li>{0, 1, 4, 9, 25, 36, 49, 123}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) {0, 1, 4, 9, 16, 25, 36, 49, 64, 81}</p>\n<p><strong>Explanation:</strong>&nbsp;The set S contains the square of an integer less than 10. That's why the third option is correct according to the given set.</p>\n<p>9) The intersection of the sets {1, 2, 8, 9, 10, 5} and {1, 2, 6, 10, 12, 15} is the set _____________</p>\n<ol>\n<li>{1, 2, 10}</li>\n</ol>\n<ol>\n<li>{5, 6, 12, 15}</li>\n<li>{2, 5, 10, 9}</li>\n<li>sd) {1, 6, 12, 9, 8}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) {1, 2, 10}</p>\n<p><strong>Explanation:</strong>&nbsp;The intersection of the two sets is the set that contains the common elements of both the given sets. That's why the first option is right according to the given sets.</p>\n<p>10) The difference of {1, 2, 3, 6, 8} and {1, 2, 5, 6} is the set ____________</p>\n<ol>\n<li>{1, 3}</li>\n</ol>\n<ol>\n<li>{5, 6, 8}</li>\n<li>{3, 8}</li>\n<li>{2, 6, 5}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) {3, 8}</p>\n<p><strong>Explanation:</strong>&nbsp;The 'difference of the sets A and B' (A-B) is the set that contains the elements that are in set A but not in set B.</p>\n<p>11) If n(A) = 20 and n(B) = 30 and n(A U B) = 40 then n(A &cap; B) is?</p>\n<ol>\n<li>20</li>\n</ol>\n<ol>\n<li>30</li>\n<li>40</li>\n<li>10</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) 10</p>\n<p><strong>Explanation:</strong>&nbsp;By using the formula we can calculate n(A &cap; B),</p>\n<p>n(A U B) = n(A) + n(B) - n(A &cap; B).</p>\n<p>n(A &cap; B) = n(A) + n(B) - n(A U B)</p>\n<p>n(A &cap; B) = 20 + 30 - 40</p>\n<p>So, n(A &cap; B) = 10</p>\n<p>12) Let the players who play cricket be 12, the ones who play football 10, those who play only cricket are 6, then the number of players who play only football are ___________, assuming there is a total of 16 players.</p>\n<ol>\n<li>16</li>\n</ol>\n<ol>\n<li>8</li>\n<li>4</li>\n<li>10</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) 4</p>\n<p><strong>Explanation:</strong>&nbsp;None</p>\n<p>13) Which among the following can be taken as the discrete object?</p>\n<ol>\n<li>People</li>\n</ol>\n<ol>\n<li>Rational numbers</li>\n<li>Integers</li>\n<li>All of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) All of the mentioned</p>\n<p><strong>Explanation:</strong>&nbsp;Discrete object includes people, houses, rational numbers, integers, automobiles.</p>\n<p>14) Which option contains two equal sets?</p>\n<ol>\n<li>X = {5, 6} and Y = {6}</li>\n</ol>\n<ol>\n<li>X = {5, 6, 8, 9} and Y = {6, 8, 5, 9}</li>\n<li>X = {5, 6, 9} and Y = {5, 6}</li>\n<li>X = {5, 6} and Y = {5, 6, 3}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) X = {5, 6, 8, 9} and Y = {6, 8, 5, 9}</p>\n<p><strong>Explanation:</strong>&nbsp;The second option is true because both X and Y sets have the same elements.</p>\n<p>15) The cardinality of the Power set of the set {1, 5, 6} is______________.</p>\n<ol>\n<li>5</li>\n</ol>\n<ol>\n<li>6</li>\n<li>8</li>\n<li>10</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) 8</p>\n<p><strong>Explanation:</strong>&nbsp;The power set of the any set is the set of all its subset. So, P({1, 5, 6}) = {null, {1}, {5}, {6}, {1, 5}, {1,6}, {5, 6}, {1, 5, 6}}. The power set of the given set consists of 8 elements. That's why, 8 is the cardinality of the given set.</p>\n<p>16) The Cartesian product of the (Set Y) x (Set X) is equal to the Cartesian product of (Set X) x (Set Y) or Not?</p>\n<ol>\n<li>Yes</li>\n</ol>\n<ol>\n<li>No</li>\n<li>None of the above</li>\n<li>I Don't know</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) No</p>\n<p><strong>Explanation:</strong>&nbsp;The Cartesian product of the (Set Y) x (Set X) is not equal to the Cartesian product of (Set X) x (Set Y).</p>\n<p>Let's suppose X = {5, 6, 7} and Y = {a, b, c}. The Cartesian product of (set X) x (set Y) = {(5, a), (5, b), (5, c), (6, a), (6, b), (6, c), (7, a), (7, b), (7, c) } and the Cartesian product of (set Y) x (set X) = {(a, 5), (a, 6), (a, 7), (b, 5), (b, 6), (b, 7), (c, 5), (c, 6), (c, 7)}. So, both the Cartesian product are not equal.</p>\n<p>17) How many elements in the Power set of set A= {{&Phi;}, {&Phi;, {&Phi;}}}?</p>\n<ol>\n<li>4 elements</li>\n</ol>\n<ol>\n<li>2 elements</li>\n<li>6 elements</li>\n<li>5 elements</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) 4 elements</p>\n<p><strong>Explanation:</strong>&nbsp;Set A contains two elements. So, the number of elements in the power set of Set A is 4.</p>\n<p>18) Mathematics can be broadly categorized into how many types?</p>\n<ol>\n<li>3 types</li>\n</ol>\n<ol>\n<li>2 types</li>\n<li>5 types</li>\n<li>4 types</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) 2 types</p>\n<p><strong>Explanation:</strong>&nbsp;Mathematics can be broadly categorized into Continuous and Discrete Mathematics.</p>\n<p>19) Which of the following function is not a mathematics function?</p>\n<ol>\n<li>many to one</li>\n</ol>\n<ol>\n<li>one-to-many</li>\n<li>one to one</li>\n<li>All of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) one-to-many</p>\n<p><strong>Explanation:</strong>&nbsp;None</p>\n<p>20) Which of the following function is also referred to as an injective function?</p>\n<ol>\n<li>Many-to-one</li>\n</ol>\n<ol>\n<li>Onto</li>\n<li>One-to-One</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) One-to-One.</p>\n<p><strong>Explanation:</strong>&nbsp;An injective function or one-to-one function is a function that connects a single element of domain to the single element of co-domain.</p>\n<p>21) How many injections are defined from set A to set B if set A has 4 elements and set B has 5 elements?</p>\n<ol>\n<li>24</li>\n</ol>\n<ol>\n<li>64</li>\n<li>144</li>\n<li>120</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) 120</p>\n<p><strong>Explanation:</strong>&nbsp;120 injections are defined from set A to set B if set A has 4 elements and set B has 5 elements. Using the following formula, we can easily calculate the injections:</p>\n<p>Number of injections from set A to Set B= 5p<sub>4</sub></p>\n<p>5! / (5 - 4)! = 5 x 4 x 3 x 2 = 120</p>\n<p>22) The function (gof) is _________ , if the function f and g are onto function?</p>\n<ol>\n<li>Into function</li>\n</ol>\n<ol>\n<li>one to one function</li>\n<li>onto function</li>\n<li>one-to-many function</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) onto</p>\n<p><strong>Explanation:</strong>&nbsp;The function (gof) is also an '\"Onto function\" if the function f and g are '\"Onto function'.</p>\n<p>23) How many bytes are needed for encoding 2000 bits of data?</p>\n<ol>\n<li>5 Byte</li>\n</ol>\n<ol>\n<li>2 bytes</li>\n<li>4 bytes</li>\n<li>8 bytes</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) 2 bytes</p>\n<p><strong>Explanation:</strong>&nbsp;Only 2 bytes are required for encoding the 2000 bits of data.</p>\n<p>24) The cardinality of the set of even positive integers less than 20 is__________?</p>\n<ol>\n<li>8</li>\n</ol>\n<ol>\n<li>10</li>\n<li>9</li>\n<li>12</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) 9</p>\n<p><strong>Explanation:</strong>&nbsp;The cardinality of the set of even positive integers less than 20 is 9, because the set contains 9 elements. The nine elements in set are 2, 4, 6, 8, 10, 12, 14, 16, 18.</p>\n<p>25) If X = {2, 8, 12, 15, 16} and Y= {8, 16, 15, 18, 9} then union of X and Y is___________.</p>\n<ol>\n<li>{2, 8, 12, 15, 16}</li>\n</ol>\n<ol>\n<li>{ 8, 16, 15}</li>\n<li>{8, 16, 15, 18, 9}</li>\n<li>{2, 8, 9, 12, 15, 16, 18}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) {2, 8, 9, 12, 15, 16, 18}</p>\n<p><strong>Explanation:</strong>&nbsp;From both the given sets X and Y, 8, 16, and 15 should be taken once because these elements are common to both sets. So the correct union of X and Y is {2, 8, 9, 12, 15, 16, 18}.</p>\n<p>26) What is Floor function?</p>\n<ol>\n<li>It maps the real number to the greatest previous integer</li>\n</ol>\n<ol>\n<li>It maps the real number to the smallest previous integer</li>\n<li>It maps the real number to the smallest following integer</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) It maps the real number to the greatest previous integer</p>\n<p><strong>Explanation:</strong>&nbsp;Floor function f(x) maps the real number x to the greatest integer, which is not more than the value of x.</p>\n<p>27) What is Ceil function?</p>\n<ol>\n<li>It maps the real number to the greatest previous integer</li>\n</ol>\n<ol>\n<li>It maps the real number to the smallest previous integer</li>\n<li>It maps the real number to the smallest following integer</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) It maps the real number to the smallest following integer.</p>\n<p><strong>Explanation:</strong>&nbsp;Floor function f(x) maps the real number x to the smallest integer, which is not less than the value of x.</p>\n<p>28) What is the value of Floor(8.4) + Ceil(9.9)?</p>\n<ol>\n<li>18</li>\n</ol>\n<ol>\n<li>19</li>\n<li>20</li>\n<li>17</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) 18</p>\n<p><strong>Explanation:</strong>&nbsp;The value of Floor(8.4) + Ceil(9.9) is 18, because the value of Floor(8.4) is 8 and the value of Ceil(9.9) is 10. so, 8+10 is equaled to 18.</p>\n<p>29) If a and b are two positive numbers that are less than one, then the maximum value of Floor(a+b) and Ceil(a+b) is?</p>\n<ol>\n<li>Floor(a+b) is 0 and Ceil(a+b) is 1.</li>\n</ol>\n<ol>\n<li>Floor(a+b) is 1 and Ceil(a+b) is 0.</li>\n<li>Floor(a+b) is 1 and Ceil(a+b) is 2.</li>\n<li>Floor(a+b) is 2 and Ceil(a+b) is 1</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) Floor(a+b) is 1 and Ceil(a+b) is 2.</p>\n<p><strong>Explanation:</strong>&nbsp;According to the question, a&lt;1 and b&lt;1, which means that the maximum value of Floor(a+b) is 1 and Ceil(a+b) is 2.</p>\n<p>30) How many relations exist from set X to set Y if the set X and set Y has 7 and 8 elements?</p>\n<ol>\n<li>2<sup>56</sup></li>\n</ol>\n<ol>\n<li>2<sup>72</sup></li>\n<li>3<sup>56</sup></li>\n<li>56</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) 2<sup>56</sup></p>\n<p><strong>Explanation:</strong>&nbsp;From set X to set Y, there are 2<sup>mn</sup>&nbsp;number of relations, where m is the elements of set X, and n is the elements of set Y. So, 2<sup>7 x 8</sup>&nbsp;= 2<sup>56</sup>.</p>\n<p>31) The number of reflexive closure of the relation {(0,1), (1,1), (1,3), (2,1), (2,2), (3,0)} on the set {0, 1, 2, 3} is________.</p>\n<ol>\n<li>36</li>\n</ol>\n<ol>\n<li>8</li>\n<li>6</li>\n<li>2<sup>6</sup></li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) 6</p>\n<p><strong>Explanation:</strong>&nbsp;None</p>\n<p>32) The number of transitive closure exists in the relation R = {(0,1), (1,2), (2,2), (3,4), (5,3), (5,4)} where {1, 2, 3, 4, 5} &isin; A is__________.</p>\n<ol>\n<li>{(0,1), (0,2), (1,2), (2,2), (3,4), (5,3), (5,4)}</li>\n</ol>\n<ol>\n<li>{(0,0), (4,4), (5,5), (1,1), (2,2), (3,3)}</li>\n<li>{(0,1), (1,2), (2,2), (3,4)}</li>\n<li>{(0,1), (5,3), (5,4), (1,1), (2,2)}</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) {(0,1), (0,2), (1,2), (2,2), (3,4), (5,3), (5,4)}</p>\n<p><strong>Explanation:</strong>&nbsp;None</p>\n<p>33) Which statement is incorrect if X and Y are the two non-empty relations on the set S.</p>\n<ol>\n<li>If X and Y are transitive, then the intersection of X and Y is also transitive.</li>\n</ol>\n<ol>\n<li>If X and Y are reflexive, then the intersection of X and Y is also reflexive.</li>\n<li>If X and Y are symmetric, then the union of X and Y is not symmetric.</li>\n<li>If X and Y are transitive, then the union of X and Y is not transitive.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) If X and Y are transitive, then the union of X and Y is not transitive.</p>\n<p><strong>Explanation:</strong>&nbsp;None</p>\n<p>34) Which option is the negation of the bits \"1001011\"?</p>\n<ol>\n<li>11011011</li>\n</ol>\n<ol>\n<li>10110100</li>\n<li>0110100</li>\n<li>1100100</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) 0110100</p>\n<p><strong>Explanation:</strong>&nbsp;The negation of the given bits is the opposite value of the bits. If the value of a bit is 1 then its negation value is 0. And, if the value of a bit is 0, then its negation value is 1. That's why the negation of \"1001011\" is \"0110100\".</p>\n<p>35) What is the output of X (Ex-or) Y, if the bits of X is 001101 and the bits of Y is 100110?</p>\n<ol>\n<li>Output of X (Ex-or) Y is 101011</li>\n</ol>\n<ol>\n<li>Output of X (Ex-or) Y is 1101010</li>\n<li>Output of X (Ex-or) Y is 101000</li>\n<li>Output of X (Ex-or) Y is 0010101</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) Output of X (Ex-or) Y is 101011</p>\n<p><strong>Explanation:</strong>&nbsp;The resultant output of Ex-or operation is 0 if both the inputs are the same, otherwise 1. That's why the resultant output of given bits is 101011.</p>\n<p>36) Boolean algebra deals with how many values.</p>\n<ol>\n<li>It deals with only four discrete values.</li>\n</ol>\n<ol>\n<li>It deals with only five discrete values.</li>\n<li>It deals with only three discrete values.</li>\n<li>It deals with only two discrete values.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) It deals with only two discrete values.</p>\n<p><strong>Explanation:</strong>&nbsp;Boolean algebra deals with only two discrete values, 0 and 1. 0 means false, and 1 means true.</p>\n<p>37) Which of the following Law of Boolean proofs the X.X=X?</p>\n<ol>\n<li>Identity Law</li>\n</ol>\n<ol>\n<li>Double Complement Law</li>\n<li>Complement Law</li>\n<li>Idempotent Law</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) Idempotent Law.</p>\n<p><strong>Explanation:</strong>&nbsp;Idempotent Law proofs AND form and OR form. It proofs X+X=X and X.X=X.</p>\n<p>38) According to the symmetric matrix, which of the following statement is correct?</p>\n<ol>\n<li>A = A<sup>T</sup></li>\n</ol>\n<ol>\n<li>All the diagonal elements of a symmetric matrix are One.</li>\n<li>A = -A<sup>T</sup></li>\n<li>All the diagonal elements of a symmetric matrix are Zero.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) A = A<sup>T</sup></p>\n<p><strong>Explanation:</strong>&nbsp;Symmetric matrix is a square matrix. That's why its transpose is equal to the given symmetric matrix.</p>\n<p>39) Which of the following matrix having only one row and multiple columns?</p>\n<ol>\n<li>Diagonal Matrix</li>\n</ol>\n<ol>\n<li>Row Matrix</li>\n<li>Column Matrix</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) Row Matrix</p>\n<p><strong>Explanation:</strong>&nbsp;A row matrix is a matrix that consists of one row and multiple columns. The order of the row matrix is 1 x N, where N is the number of columns of a row matrix.</p>\n<p>Following are the various examples of row matrix:</p>\n<ol>\n<li>[ 6 5 4 ]: The order of this matrix 1 x 3, i.e., 1 row and three columns.</li>\n<li>[ 0 ]: The order of this matrix is 1 x 1, i.e., 1 row and 1 column.</li>\n<li>[ 1 2 0 6 8 9 ]: The order of this matrix is 1 x 6, i.e., 1 row and 6 column.</li>\n</ol>\n<p>40) Which of the following matrix having only one column and multiple rows?</p>\n<ol>\n<li>Diagonal Matrix</li>\n</ol>\n<ol>\n<li>Row Matrix</li>\n<li>Column Matrix</li>\n<li>None of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) Column Matrix.</p>\n<p><strong>Explanation:</strong>&nbsp;A column matrix is a matrix that consists of one column and multiple rows. The order of the row matrix is N x 1, where N is the number of rows of a column matrix.</p>\n<p>41) Which of the following condition is correct if we want to add two matrices?</p>\n<ol>\n<li>Both rows and columns of both the matrices which we want to add are the same</li>\n</ol>\n<ol>\n<li>Columns of both the matrices which we want to add are equal</li>\n<li>Rows of both the matrices which we want to add are the same</li>\n<li>a number of the first matrix's rows should be equal to the number of the second matrix's column, which we want to add.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) Both rows and columns of both the matrices which we want to add are the same.</p>\n<p><strong>Explanation:</strong>&nbsp;If we want to add the two matrices, then the order of their rows and columns are the same.</p>\n<p>42) A+B = B+A is a true or false statement if the order of A matrix and B matrix is the same.</p>\n<ol>\n<li>False</li>\n</ol>\n<ol>\n<li>True</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) True</p>\n<p><strong>Explanation:</strong>&nbsp;A+B = B+A is a true statement because the addition of two matrices is commutative.</p>\n<p>43) XY = YX is a true or false statement if the order of A matrix and B matrix is the same.</p>\n<ol>\n<li>False</li>\n</ol>\n<ol>\n<li>True</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) False</p>\n<p><strong>Explanation:</strong>&nbsp;XY = YX is a false statement because the multiplication of two matrices is not commutative.</p>\n<p>44) Universal logic gate is__________.</p>\n<ol>\n<li>OR</li>\n</ol>\n<ol>\n<li>NOT</li>\n<li>NAND</li>\n<li>AND</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) NAND</p>\n<p><strong>Explanation:</strong>&nbsp;NAND is a logic gate that can easily implement or create all the other logic gates without the help of three basic logic gates.</p>\n<p>45) In which year Maurice Karnaughin introduced the Karnaugh map?</p>\n<ol>\n<li>1953</li>\n</ol>\n<ol>\n<li>1956</li>\n<li>1952</li>\n<li>1950</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) 1953</p>\n<p><strong>Explanation:</strong>&nbsp;In the year 1953, Maurice Karnaughin invented the Karnaugh map.</p>\n<p>46) Canonical forms for a boolean expression has _______ types.</p>\n<ol>\n<li>Three types</li>\n</ol>\n<ol>\n<li>Four types</li>\n<li>Two types</li>\n<li>Five types</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;c) Two types.</p>\n<p><strong>Explanation:</strong>&nbsp;Canonical Form for a boolean expression has two types. The first form is a product of max-terms, and another form is the sum of min-terms.</p>\n<p>47) The use of Boolean algebra is ____________.</p>\n<ol>\n<li>in building the algebraic functions.</li>\n</ol>\n<ol>\n<li>in building logic symbols.</li>\n<li>in circuit theory.</li>\n<li>in designing the digital computers.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) in designing the digital computers.</p>\n<p><strong>Explanation:</strong>&nbsp;The widely use of Boolean algebra is in designing digital computers and various electronic circuits.</p>\n<p>48) Boolean algebra deals with how many values.</p>\n<ol>\n<li>It deals with only four discrete values.</li>\n</ol>\n<ol>\n<li>It deals with only five discrete values.</li>\n<li>It deals with only three discrete values.</li>\n<li>It deals with only two discrete values.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) It deals with only two discrete values.</p>\n<p><strong>Explanation:</strong>&nbsp;Boolean algebra deals with only two discrete values, 0 and 1. 0 means false, and one means true.</p>\n<p>49) Which search compares each element with the searching element till not found?</p>\n<ol>\n<li>Merge search</li>\n</ol>\n<ol>\n<li>Sequential Search</li>\n<li>Binary search</li>\n<li>none of the mentioned</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) Sequential search</p>\n<p><strong>Explanation:</strong>&nbsp;Sequential or Linear searching algorithm compares each element of the given list one by one with the searching element till the searching element is not found.</p>\n<p>50) If a user wants to sort the unsorted list of n elements, then the insertion sort starts with which element of the list.</p>\n<ol>\n<li>First element of the list</li>\n</ol>\n<ol>\n<li>the second element of the list</li>\n<li>the Third element of the list</li>\n<li>the Fourth element of the list</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) the second element of the list</p>\n<p><strong>Explanation:</strong>&nbsp;If a user wants to sort the unsorted list of n elements with the insertion sort. Then the sorting algorithm starts sorting with the second element of the list.</p>\n<p>51) What is the complexity of the bubble sort algorithm?</p>\n<ol>\n<li>O(n<sup>2</sup>)</li>\n</ol>\n<ol>\n<li>O(n)</li>\n<li>O(log n)</li>\n<li>O(n log n)</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) O(n<sup>2</sup>)</p>\n<p><strong>Explanation:</strong>&nbsp;O(n<sup>2</sup>) is the complexity of the bubble sort algorithm, where n is the number of sorted elements of the list.</p>\n<p>52) What is the worst case of a linear search algorithm?</p>\n<ol>\n<li>When the searching item is present in the middle of the list.</li>\n</ol>\n<ol>\n<li>When the searching item is the last element in the list.</li>\n<li>When the searching is not available in the list.</li>\n<li>When the searching item is the last element in the list or is not present in the list.</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) When the searching item is the last element in the list or is not present in the list.</p>\n<p><strong>Explanation:</strong>&nbsp;The worst case of the linear search algorithm is when the searching item is the last element in the list or is not present in the list.</p>\n<p>53) Which algorithm uses the previous outputs for finding the new outputs?</p>\n<ol>\n<li>Dynamic Programming algorithms</li>\n</ol>\n<ol>\n<li>Divide and Conquer algorithm</li>\n<li>Brute Force algorithm</li>\n<li>None of them</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;a) Dynamic Programming algorithms</p>\n<p><strong>Explanation:</strong>&nbsp;Dynamic programming algorithms are those algorithms that find the new outputs by using the previous outputs of the same problem.</p>\n<p>54) Which option is correct for representing an algorithm?</p>\n<ol>\n<li>Pseudo codes</li>\n</ol>\n<ol>\n<li>Flow charts</li>\n<li>Statements in the common language</li>\n<li>All of them</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;d) All of them</p>\n<p><strong>Explanation:</strong>&nbsp;Pseudo codes, flow charts, and the statement in the common language are used for representing the algorithm.</p>\n<p>55) Which case does not exist in complexity theory?</p>\n<ol>\n<li>Average case</li>\n</ol>\n<ol>\n<li>Null case</li>\n<li>Best case</li>\n<li>Worst Case</li>\n</ol>\n<p>Hide Answer&nbsp;Workspace</p>\n<p><strong>Answer:</strong>&nbsp;b) Null case</p>\n<p><strong>Explanation:</strong>&nbsp;Average, worst, and best case are the three cases that always exist in the complexity theory. There is no Null case in the theory of complexity.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>UNIVERSITY OF EDUCATION, WINNEBA</strong></p>\n<p><strong>DEPARTMENT OF ICT EDUCATION</strong></p>\n<p><strong>ICTE 232 &ndash; DISCRETE MATHEMATICS</strong></p>\n<p>MID-SEMESTER EXAMS</p>\n<p>GROUP 1, 3 &amp; 5</p>\n<ol>\n<li>Determine if each statement below is true or false, and explain your reasoning (using</li>\n</ol>\n<p>truth tables if possible).</p>\n<ol>\n<li>It is possible for an implication and its contrapositive to have different truth</li>\n</ol>\n<p>values.</p>\n<ol>\n<li>(&not;p &or; q) &and; &not;(&not;p &or; q) is a contradiction.</li>\n<li>If two statements are logically equivalent, then so are their negations.</li>\n<li>Let A = {1, 2, 3, 4}, B = {a, b, c}. Write out the following Cartesian products.</li>\n<li>A &times; B</li>\n<li>B &times; A</li>\n<li>What can you conclude about A and B if A &times; B = B &times; A</li>\n<li>Use the Euclidean algorithm to compute gcd(a, b)</li>\n</ol>\n<p>a = 567, b = 349</p>\n<ol start=\"4\">\n<li>Determine whether the following compound proposition is a tautology using logical</li>\n</ol>\n<p>equivalences instead of truth tables.</p>\n<p>(&not;p &and; (p &rarr; q)) &rarr; &not;q</p>\n<ol start=\"5\">\n<li>Suppose that in a group of 50 motorcyclists, 30 own a Triumph and 32 own a Honda.</li>\n</ol>\n<p>If 15 motorcyclists in the group own neither type of motorcycle, how many own a</p>\n<p>motorcycle of each type?</p>\n<p>GROUP 2, 4 &amp; 6</p>\n<ol>\n<li>In a group of 35 ex-athletes, 17 play golf, 20 go cycling, and 12 do yoga. Exactly 8</li>\n</ol>\n<p>play golf and go cycling, 8 play golf and do yoga, 7 go cycling and do yoga, and 4 do</p>\n<p>all three activities. How many of the ex-athletes do none of these activities?</p>\n<ol start=\"2\">\n<li>Use the Euclidean algorithm to compute gcd(a, b).</li>\n</ol>\n<p>a = 233, b = 89</p>\n<p>3.</p>\n<ol>\n<li>Determine the sets A and B, if A &minus; B = {1, 2, 7, 8}, B &minus; A = {3, 4, 10} and A &cap; B</li>\n</ol>\n<p>= {5, 6, 9}.</p>\n<ol>\n<li>Verify A &cup; (A &cap; B) = A using the rules of set algebra</li>\n<li>Determine whether the following compound proposition is a tautology using logical</li>\n</ol>\n<p>equivalences instead of truth tables</p>\n<p>[p &and; (p &rarr; q)] &rarr; q</p>\n<ol start=\"5\">\n<li>Write in English the converse and negation of each statement.</li>\n<li>If I had &cent;1,000,000, I&rsquo;d buy you a fur coat.</li>\n<li>A day that&rsquo;s sunny and not too windy is a good day for walking on the waterfront.</li>\n<li>If 11 pigeons live in 10 birdhouses, then there are two pigeons that live in the</li>\n</ol>\n<p>same birdhouse.</p>",
            "<h2>PRINCIPLES AND PRACTICE OF TEACHER EDUCATION</h2>",
            "<h2>INTRODUCTION TO SPECIAL EDUCATION</h2>",
            "<h2>DATABASE MANAGEMENT SYSTEM</h2> ",
            "<h2>EVENT DRIVEN PROGRAMMING</h2> <!--[if gte mso 9]><xml>\n <o:OfficeDocumentSettings>\n  <o:TargetScreenSize>800x600</o:TargetScreenSize>\n </o:OfficeDocumentSettings>\n</xml><![endif]-->\n<!--[if gte mso 9]><xml>\n <w:WordDocument>\n  <w:View>Normal</w:View>\n  <w:Zoom>0</w:Zoom>\n  <w:TrackMoves/>\n  <w:TrackFormatting/>\n  <w:PunctuationKerning/>\n  <w:ValidateAgainstSchemas/>\n  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\n  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>\n  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\n  <w:DoNotPromoteQF/>\n  <w:LidThemeOther>EN-US</w:LidThemeOther>\n  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>\n  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>\n  <w:Compatibility>\n   <w:BreakWrappedTables/>\n   <w:SnapToGridInCell/>\n   <w:WrapTextWithPunct/>\n   <w:UseAsianBreakRules/>\n   <w:DontGrowAutofit/>\n   <w:SplitPgBreakAndParaMark/>\n   <w:EnableOpenTypeKerning/>\n   <w:DontFlipMirrorIndents/>\n   <w:OverrideTableStyleHps/>\n   <w:UseFELayout/>\n  </w:Compatibility>\n  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\n  <m:mathPr>\n   <m:mathFont m:val=\"Cambria Math\"/>\n   <m:brkBin m:val=\"before\"/>\n   <m:brkBinSub m:val=\"&#45;-\"/>\n   <m:smallFrac m:val=\"off\"/>\n   <m:dispDef/>\n   <m:lMargin m:val=\"0\"/>\n   <m:rMargin m:val=\"0\"/>\n   <m:defJc m:val=\"centerGroup\"/>\n   <m:wrapIndent m:val=\"1440\"/>\n   <m:intLim m:val=\"subSup\"/>\n   <m:naryLim m:val=\"undOvr\"/>\n  </m:mathPr></w:WordDocument>\n</xml><![endif]-->\n<!--[if gte mso 9]><xml>\n <w:LatentStyles DefLockedState=\"false\" DefUnhideWhenUsed=\"false\"\n  DefSemiHidden=\"false\" DefQFormat=\"false\" DefPriority=\"99\"\n  LatentStyleCount=\"376\">\n  <w:LsdException Locked=\"false\" Priority=\"0\" QFormat=\"true\" Name=\"Normal\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 7\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 8\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 9\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 9\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 7\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 8\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 9\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"footnote text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation text\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"header\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"footer\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index heading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"35\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"caption\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"table of figures\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"envelope address\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"envelope return\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"footnote reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"line number\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"page number\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"endnote reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"endnote text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"table of authorities\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"macro\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"toa heading\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"10\" QFormat=\"true\" Name=\"Title\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Closing\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Signature\"/>\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"Default Paragraph Font\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Message Header\"/>\n  <w:LsdException Locked=\"false\" Priority=\"11\" QFormat=\"true\" Name=\"Subtitle\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Salutation\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Date\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text First Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text First Indent 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Note Heading\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Block Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Hyperlink\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"FollowedHyperlink\"/>\n  <w:LsdException Locked=\"false\" Priority=\"22\" QFormat=\"true\" Name=\"Strong\"/>\n  <w:LsdException Locked=\"false\" Priority=\"20\" QFormat=\"true\" Name=\"Emphasis\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Document Map\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Plain Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"E-mail Signature\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Top of Form\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Bottom of Form\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal (Web)\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Acronym\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Address\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Cite\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Code\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Definition\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Keyboard\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Preformatted\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Sample\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Typewriter\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Variable\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal Table\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation subject\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"No List\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Contemporary\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Elegant\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Professional\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Subtle 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Subtle 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Balloon Text\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"Table Grid\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Theme\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Placeholder Text\"/>\n  <w:LsdException Locked=\"false\" Priority=\"1\" QFormat=\"true\" Name=\"No Spacing\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Revision\"/>\n  <w:LsdException Locked=\"false\" Priority=\"34\" QFormat=\"true\"\n   Name=\"List Paragraph\"/>\n  <w:LsdException Locked=\"false\" Priority=\"29\" QFormat=\"true\" Name=\"Quote\"/>\n  <w:LsdException Locked=\"false\" Priority=\"30\" QFormat=\"true\"\n   Name=\"Intense Quote\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"19\" QFormat=\"true\"\n   Name=\"Subtle Emphasis\"/>\n  <w:LsdException Locked=\"false\" Priority=\"21\" QFormat=\"true\"\n   Name=\"Intense Emphasis\"/>\n  <w:LsdException Locked=\"false\" Priority=\"31\" QFormat=\"true\"\n   Name=\"Subtle Reference\"/>\n  <w:LsdException Locked=\"false\" Priority=\"32\" QFormat=\"true\"\n   Name=\"Intense Reference\"/>\n  <w:LsdException Locked=\"false\" Priority=\"33\" QFormat=\"true\" Name=\"Book Title\"/>\n  <w:LsdException Locked=\"false\" Priority=\"37\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"Bibliography\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"TOC Heading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"41\" Name=\"Plain Table 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"42\" Name=\"Plain Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"43\" Name=\"Plain Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"44\" Name=\"Plain Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"45\" Name=\"Plain Table 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"40\" Name=\"Grid Table Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"Grid Table 1 Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"Grid Table 6 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"Grid Table 7 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"List Table 1 Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"List Table 6 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"List Table 7 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Mention\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Smart Hyperlink\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Hashtag\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Unresolved Mention\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Smart Link\"/>\n </w:LatentStyles>\n</xml><![endif]-->\n<!--[if !mso]><object\n classid=\"clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D\" id=ieooui></object>\n<style>\nst1\\:*{behavior:url(#ieooui) }\n</style>\n<![endif]-->\n<style>\n    <!--  /* Font Definitions */  @font-face \t{font-family:PMingLiU; \tpanose-1:2 1 6 1 0 1 1 1 1 1; \tmso-font-alt:PMingLiU; \tmso-font-charset:136; \tmso-generic-font-family:roman; \tmso-font-pitch:variable; \tmso-font-signature:-1610611969 684719354 22 0 1048577 0;} @font-face \t{font-family:\"Cambria Math\"; \tpanose-1:2 4 5 3 5 4 6 3 2 4; \tmso-font-charset:0; \tmso-generic-font-family:roman; \tmso-font-pitch:variable; \tmso-font-signature:-536869121 1107305727 33554432 0 415 0;} @font-face \t{font-family:\"\\@PMingLiU\"; \tpanose-1:2 1 6 1 0 1 1 1 1 1; \tmso-font-charset:136; \tmso-generic-font-family:roman; \tmso-font-pitch:variable; \tmso-font-signature:-1610611969 684719354 22 0 1048577 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal \t{mso-style-unhide:no; \tmso-style-qformat:yes; \tmso-style-parent:\"\"; \tmargin-top:0in; \tmargin-right:0in; \tmargin-bottom:6.0pt; \tmargin-left:0in; \tmso-pagination:widow-orphan; \tfont-size:10.0pt; \tfont-family:\"Times New Roman\",serif; \tmso-fareast-font-family:PMingLiU; \tmso-fareast-language:ZH-TW;} h2 \t{mso-style-unhide:no; \tmso-style-qformat:yes; \tmso-style-link:\"Heading 2 Char\"; \tmso-style-next:Normal; \tmargin-top:6.0pt; \tmargin-right:0in; \tmargin-bottom:6.0pt; \tmargin-left:-.5in; \tmso-pagination:widow-orphan; \tpage-break-after:avoid; \tmso-outline-level:2; \tfont-size:16.0pt; \tmso-bidi-font-size:10.0pt; \tfont-family:\"Arial\",sans-serif; \tmso-bidi-font-family:\"Times New Roman\"; \tmso-fareast-language:ZH-TW; \tmso-bidi-font-weight:normal;} p.MsoHeader, li.MsoHeader, div.MsoHeader \t{mso-style-unhide:no; \tmso-style-link:\"Header Char\"; \tmargin-top:0in; \tmargin-right:0in; \tmargin-bottom:6.0pt; \tmargin-left:-.5in; \tmso-pagination:widow-orphan; \ttab-stops:center 3.0in right 6.0in; \tfont-size:8.0pt; \tmso-bidi-font-size:10.0pt; \tfont-family:\"Arial\",sans-serif; \tmso-fareast-font-family:PMingLiU; \tmso-bidi-font-family:\"Times New Roman\"; \tmso-fareast-language:ZH-TW; \tfont-weight:bold; \tmso-bidi-font-weight:normal;} p.MsoFooter, li.MsoFooter, div.MsoFooter \t{mso-style-unhide:no; \tmso-style-link:\"Footer Char\"; \tmargin-top:0in; \tmargin-right:0in; \tmargin-bottom:6.0pt; \tmargin-left:0in; \tmso-pagination:widow-orphan; \ttab-stops:center 3.0in right 6.0in; \tfont-size:10.0pt; \tfont-family:\"Times New Roman\",serif; \tmso-fareast-font-family:PMingLiU; \tmso-fareast-language:ZH-TW;} span.MsoPageNumber \t{mso-style-unhide:no; \tmso-ansi-font-size:8.0pt; \tfont-family:\"Arial\",sans-serif; \tmso-ascii-font-family:Arial; \tmso-hansi-font-family:Arial; \tfont-weight:bold; \tmso-bidi-font-weight:normal;} span.Heading2Char \t{mso-style-name:\"Heading 2 Char\"; \tmso-style-unhide:no; \tmso-style-locked:yes; \tmso-style-link:\"Heading 2\"; \tmso-ansi-font-size:16.0pt; \tfont-family:\"Arial\",sans-serif; \tmso-ascii-font-family:Arial; \tmso-hansi-font-family:Arial; \tmso-fareast-language:ZH-TW; \tfont-weight:bold; \tmso-bidi-font-weight:normal;} span.FooterChar \t{mso-style-name:\"Footer Char\"; \tmso-style-unhide:no; \tmso-style-locked:yes; \tmso-style-link:Footer; \tmso-fareast-language:ZH-TW;} span.HeaderChar \t{mso-style-name:\"Header Char\"; \tmso-style-unhide:no; \tmso-style-locked:yes; \tmso-style-link:Header; \tmso-ansi-font-size:8.0pt; \tfont-family:\"Arial\",sans-serif; \tmso-ascii-font-family:Arial; \tmso-hansi-font-family:Arial; \tmso-fareast-language:ZH-TW; \tfont-weight:bold; \tmso-bidi-font-weight:normal;} .MsoChpDefault \t{mso-style-type:export-only; \tmso-default-props:yes; \tfont-size:10.0pt; \tmso-ansi-font-size:10.0pt; \tmso-bidi-font-size:10.0pt; \tmso-fareast-font-family:PMingLiU;} @page WordSection1 \t{size:595.3pt 841.9pt; \tmargin:21.3pt 1.25in 21.3pt 1.25in; \tmso-header-margin:42.55pt; \tmso-footer-margin:49.6pt; \tmso-paper-source:0; \tlayout-grid:18.0pt;} div.WordSection1 \t{page:WordSection1;}  /* List Definitions */  @list l0 \t{mso-list-id:45765973; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l0:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l1 \t{mso-list-id:69235849; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l1:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l2 \t{mso-list-id:144471855; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l2:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l3 \t{mso-list-id:342587152; \tmso-list-type:hybrid; \tmso-list-template-ids:-1382764532 -1710326162 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;} @list l3:level1 \t{mso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l3:level2 \t{mso-level-number-format:ideograph-traditional; \tmso-level-text:%2、; \tmso-level-tab-stop:48.0pt; \tmso-level-number-position:left; \tmargin-left:48.0pt; \ttext-indent:-24.0pt;} @list l3:level3 \t{mso-level-number-format:roman-lower; \tmso-level-tab-stop:1.0in; \tmso-level-number-position:right; \tmargin-left:1.0in; \ttext-indent:-24.0pt;} @list l3:level4 \t{mso-level-tab-stop:96.0pt; \tmso-level-number-position:left; \tmargin-left:96.0pt; \ttext-indent:-24.0pt;} @list l3:level5 \t{mso-level-number-format:ideograph-traditional; \tmso-level-text:%5、; \tmso-level-tab-stop:120.0pt; \tmso-level-number-position:left; \tmargin-left:120.0pt; \ttext-indent:-24.0pt;} @list l3:level6 \t{mso-level-number-format:roman-lower; \tmso-level-tab-stop:2.0in; \tmso-level-number-position:right; \tmargin-left:2.0in; \ttext-indent:-24.0pt;} @list l3:level7 \t{mso-level-tab-stop:168.0pt; \tmso-level-number-position:left; \tmargin-left:168.0pt; \ttext-indent:-24.0pt;} @list l3:level8 \t{mso-level-number-format:ideograph-traditional; \tmso-level-text:%8、; \tmso-level-tab-stop:192.0pt; \tmso-level-number-position:left; \tmargin-left:192.0pt; \ttext-indent:-24.0pt;} @list l3:level9 \t{mso-level-number-format:roman-lower; \tmso-level-tab-stop:3.0in; \tmso-level-number-position:right; \tmargin-left:3.0in; \ttext-indent:-24.0pt;} @list l4 \t{mso-list-id:408697366; \tmso-list-type:simple; \tmso-list-template-ids:67698703;} @list l4:level1 \t{mso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l5 \t{mso-list-id:415789612; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l5:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l6 \t{mso-list-id:479156135; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l6:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l7 \t{mso-list-id:562838376; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l7:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l8 \t{mso-list-id:714693065; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l8:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l9 \t{mso-list-id:888691147; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l9:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l10 \t{mso-list-id:935744198; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l10:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l11 \t{mso-list-id:1026639075; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l11:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l12 \t{mso-list-id:1281495097; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l12:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l13 \t{mso-list-id:1294217842; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l13:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l14 \t{mso-list-id:1338996357; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l14:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l15 \t{mso-list-id:1514761776; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l15:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l16 \t{mso-list-id:1612123427; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l16:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l17 \t{mso-list-id:1640182583; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l17:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l18 \t{mso-list-id:1641576007; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l18:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l19 \t{mso-list-id:1760256057; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l19:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l20 \t{mso-list-id:2093966048; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l20:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} @list l21 \t{mso-list-id:2114284386; \tmso-list-type:simple; \tmso-list-template-ids:67698713;} @list l21:level1 \t{mso-level-number-format:alpha-lower; \tmso-level-text:\"\\(%1\\)\"; \tmso-level-tab-stop:.25in; \tmso-level-number-position:left; \tmargin-left:.25in; \ttext-indent:-.25in;} ol \t{margin-bottom:0in;} ul \t{margin-bottom:0in;} \n    -->\n</style>\n<!--[if gte mso 10]>\n<style>\n /* Style Definitions */\n table.MsoNormalTable\n\t{mso-style-name:\"Table Normal\";\n\tmso-tstyle-rowband-size:0;\n\tmso-tstyle-colband-size:0;\n\tmso-style-noshow:yes;\n\tmso-style-priority:99;\n\tmso-style-parent:\"\";\n\tmso-padding-alt:0in 5.4pt 0in 5.4pt;\n\tmso-para-margin:0in;\n\tmso-pagination:widow-orphan;\n\tfont-size:10.0pt;\n\tfont-family:\"Times New Roman\",serif;}\n</style>\n<![endif]-->\n<!--StartFragment-->\n<h2 style=\"margin-left:0in;\">Multiple Choice Questions (40%)</h2>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->1.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Event-driven languages are:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->FORTRAN based</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Are used to write procedural languages</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->OOP</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Designed to make programming GUI easier</p>\n<p class=\"MsoNormal\"><strong>Answer: D</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->2.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->IDE is:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Independent Development Enterprise</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A development environment for machine language</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A software project management tool</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->An Integrated Development Environment for Visual Basic</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->3.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Which of the following is not part of the IDE:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Code editor window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Properties window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form layout window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->General window</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->4.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->The application name always appears in the:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Properties window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Intermediate window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Code window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Title bar</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->5.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->The color of a button is:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->One of its properties</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Not updateable</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Defined in the project</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Defined in the Intermediate window</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->6.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Code is:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Updateable in the form editor</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Instructions</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Seldom used</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->An object &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<strong>Answer: B</strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->7.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Controls are:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Code</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Part of the menus</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Rules</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Objects</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->8.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->In the IDE, which of following is used to design the layout of an application?</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Designer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Project Explorer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Context Menu</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Layout window</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->9.&nbsp; &nbsp; &nbsp;&nbsp;\n    <!--[endif]-->The location of the form on the desktop during execution is determined by the:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Designer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Project Explorer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Context Menu</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Layout window</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->10.&nbsp; &nbsp;\n    <!--[endif]-->The Object Browser:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Displays the command buttons and textboxes, etc.</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Shows frequently used shortcuts as objects</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Is a Context Menu</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Displays the object libraries and their combinations of data and code</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->11.&nbsp; &nbsp;\n    <!--[endif]-->The location of the form on the desktop during execution is determined by the:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Designer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Project Explorer window</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Context Menu</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Form Layout window</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->12.&nbsp; &nbsp;\n    <!--[endif]-->The first procedure-oriented language was:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->FORTRAN</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->BASIC</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->COBOL</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->ADA</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\"><strong>&nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->13.&nbsp; &nbsp;\n    <!--[endif]-->C is:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A language widely used in UNIX</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A language based on BASIC</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Used primarily for business applications</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A GUI</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->14.&nbsp; &nbsp;\n    <!--[endif]-->COBOL is:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->One of the oldest programming languages</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Still widely used</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Not suitable for business applications</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->None of the above</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->15.&nbsp; &nbsp;\n    <!--[endif]-->Object Oriented languages:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Are procedural languages</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Are task oriented</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Are based on actions happening to objects</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Are natural language techniques</p>\n<p class=\"MsoNormal\"><strong>Answer: C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->16.&nbsp; &nbsp;\n    <!--[endif]-->Visual Basic projects are identified by a:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.vbp&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.mak&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.vbg&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->All the above</p>\n<p class=\"MsoNormal\"><strong>Answer: D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->17.&nbsp; &nbsp;\n    <!--[endif]-->Visual Basic forms are identified by a:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.frm&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.mak&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&ldquo;.for&rdquo; suffix</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->A special icon</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->18.&nbsp; &nbsp;\n    <!--[endif]-->To run an application in Visual Basic:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Click on the start button (blue arrow)</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Use the File Menu</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Use the Project Menu to select Run</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->None of the above</p>\n<p class=\"MsoNormal\"><strong>Answer: A</strong></p>\n<p class=\"MsoNormal\"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->19.&nbsp; &nbsp;\n    <!--[endif]-->To exit Visual Basic:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Click Alt-Q</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Use the File Menu to select Quit</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Use the Window Menu to select Exit</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Click on the diskette icon</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->20.&nbsp; &nbsp;\n    <!--[endif]-->The reference library of Visual Basic books is called:</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(a)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->MSDN Library</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(b)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Help Library</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(c)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Contents</p>\n<p class=\"MsoNormal\" style=\"margin-top:0in;margin-right:0in;margin-bottom:0in;margin-left:.5in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(d)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Topic pane</p>\n<p class=\"MsoNormal\"><strong>Answer: A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:0in;\"><strong><u><span style=\"font-size:24px;\">Short Question (60%)</span></u></strong></p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(1)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->&nbsp; &nbsp; &nbsp; &nbsp;Boolean, Byte, Date, Integer, Long, Single, Double, Currency, STRING, Object, Variant&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;(Any Five of them, each carries 5 marks)</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:27.0pt;text-indent:-27.0pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(2)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->Private function CalculateArea()&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;\"><span lang=\"PT-BR\">Dim radius as single</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\"><span lang=\"PT-BR\">&nbsp; &nbsp; &nbsp; &nbsp;Radius = 3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\"><span lang=\"PT-BR\">&nbsp; &nbsp; &nbsp; &nbsp;</span>lblArea = 3.14 x radius x radius&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">&nbsp; &nbsp; &nbsp; &nbsp;End function&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin-top:3.0pt;margin-right:0in;margin-bottom:0in;margin-left:.25in;text-indent:-.25in;\">\n    <!--[if !supportLists]-->(3)&nbsp; &nbsp;&nbsp;\n    <!--[endif]-->positive&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n<p class=\"MsoNormal\">&nbsp;</p>\n<!--EndFragment-->\n<p><br></p>",
            "<h2>DATA STRUCTURES AND ALGORITHMS</h2> <p>This set of Data Structure Multiple Choice Questions &amp; Answers (MCQs) focuses on &ldquo;Array and Array Operations&rdquo;.</p>\n<ol>\n<li>Which of these best describes an array?<br /> a) A data structure that shows a hierarchical behavior<br /> b) Container of objects of similar types<br /> c) Arrays are immutable once initialised<br /> d) Array is not a data structure<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: Array contains elements only of the same type.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"2\">\n<li>How do you initialize an array in C?<br /> a) int arr[3] = (1,2,3);<br /> b) int arr(3) = {1,2,3};<br /> c) int arr[3] = {1,2,3};<br /> d) int arr(3) = (1,2,3);<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: This is the syntax to initialize an array in C.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"3\">\n<li>How do you instantiate an array in Java?<br /> a) int arr[] = new int(3);<br /> b) int arr[];<br /> c) int arr[] = new int[3];<br /> d) int arr() = new int(3);<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: Note that int arr[]; is declaration whereas int arr[] = new int[3]; is to instantiate an array.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"4\">\n<li>Which of the following is the correct way to declare a multidimensional array in Java?<br /> a) int[] arr;<br /> b) int arr[[]];<br /> c) int[][]arr;<br /> d) int[[]] arr;<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: The syntax to declare multidimensional array in java is either int[][] arr; or int arr[][];</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"5\">\n<li>What is the output of the following Java code?</li>\n</ol>\n<p><strong>public</strong> <strong>class</strong> array</p>\n<p>{</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>public</strong> <strong>static</strong> <strong>void</strong> main(String args[])</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>int</strong> []arr = {1,2,3,4,5};</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(arr[2]);</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(arr[4]);</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p>}</p>\n<ol>\n<li>a) 3 and 5<br /> b) 5 and 3<br /> c) 2 and 4<br /> d) 4 and 2<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Array indexing starts from 0.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"6\">\n<li>What is the output of the following Java code?</li>\n</ol>\n<p><strong>public</strong> <strong>class</strong> array</p>\n<p>{</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>public</strong> <strong>static</strong> <strong>void</strong> main(String args[])</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>int</strong> []arr = {1,2,3,4,5};</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(arr[5]);</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\n<p>}</p>\n<ol>\n<li>a) 4<br /> b) 5<br /> c) ArrayIndexOutOfBoundsException<br /> d) InavlidInputException<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: Trying to access an element beyond the limits of an array gives ArrayIndexOutOfBoundsException.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"7\">\n<li>When does the ArrayIndexOutOfBoundsException occur?<br /> a) Compile-time<br /> b) Run-time<br /> c) Not an error<br /> d) Not an exception at all<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: ArrayIndexOutOfBoundsException is a run-time exception and the compilation is error-free.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"8\">\n<li>Which of the following concepts make extensive use of arrays?<br /> a) Binary trees<br /> b) Scheduling of processes<br /> c) Caching<br /> d) Spatial locality<br /> View Answer</li>\n</ol>\n<p>Answer: d<br /> Explanation: Whenever a particular memory location is referred to, it is likely that the locations nearby are also referred, arrays are stored as contiguous blocks in memory, so if you want to access array elements, spatial locality makes it to access quickly.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"9\">\n<li>What are the advantages of arrays?<br /> a) Objects of mixed data types can be stored<br /> b) Elements in an array cannot be sorted<br /> c) Index of first element of an array is 1<br /> d) Easier to store elements of same data type<br /> View Answer</li>\n</ol>\n<p>Answer: d<br /> Explanation: Arrays store elements of the same data type and present in continuous memory locations.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"10\">\n<li>What are the disadvantages of arrays?<br /> a) Data structure like queue or stack cannot be implemented<br /> b) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size<br /> c) Index value of an array can be negative<br /> d) Elements are sequentially accessed<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: Arrays are of fixed size. If we insert elements less than the allocated size, unoccupied positions can&rsquo;t be used again. Wastage will occur in memory.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"11\">\n<li>Assuming int is of 4bytes, what is the size of int arr[15];?<br /> a) 15<br /> b) 19<br /> c) 11<br /> d) 60<br /> View Answer</li>\n</ol>\n<p>Answer: d<br /> Explanation: Since there are 15 int elements and each int is of 4bytes, we get 15*4 = 60bytes.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"12\">\n<li>In general, the index of the first element in an array is __________<br /> a) 0<br /> b) -1<br /> c) 2<br /> d) 1<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: In general, Array Indexing starts from 0. Thus, the index of the first element in an array is 0.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"13\">\n<li>Elements in an array are accessed _____________<br /> a) randomly<br /> b) sequentially<br /> c) exponentially<br /> d) logarithmically<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Elements in an array are accessed randomly. In Linked lists, elements are accessed sequentially.</p>\n<p><strong>Data Structure Questions and Answers &ndash; Stack Operations &ndash; 2</strong></p>\n<p>&nbsp;</p>\n<p>This set of Data Structure Interview Questions and Answers focuses on &ldquo;Stack Operations &ndash; 2&rdquo;.</p>\n<ol>\n<li>The postfix form of the expression (A+ B)*(C*D- E)*F / G is?<br /> a) AB+ CD*E &ndash; FG /**<br /> b) AB + CD* E &ndash; F **G /<br /> c) AB + CD* E &ndash; *F *G /<br /> d) AB + CDE * &ndash; * F *G /<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: (((A+ B)*(C*D- E)*F) / G) is converted to postfix expression as<br /> (AB+(*(C*D- E)*F )/ G)<br /> (AB+CD*E-*F) / G<br /> (AB+CD*E-*F * G/). Thus Postfix expression is AB+CD*E-*F*G/</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"2\">\n<li>The data structure required to check whether an expression contains a balanced parenthesis is?<br /> a) Stack<br /> b) Queue<br /> c) Array<br /> d) Tree<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: The stack is a simple data structure in which elements are added and removed based on the LIFO principle. Open parenthesis is pushed into the stack and a closed parenthesis pops out elements till the top element of the stack is its corresponding open parenthesis. If the stack is empty, parenthesis is balanced otherwise it is unbalanced.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"3\">\n<li>What data structure would you mostly likely see in non recursive implementation of a recursive algorithm?<br /> a) Linked List<br /> b) Stack<br /> c) Queue<br /> d) Tree<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: In recursive algorithms, the order in which the recursive process comes back is the reverse of the order in which it goes forward during execution. The compiler uses the stack data structure to implement recursion. In the forwarding phase, the values of local variables, parameters and the return address are pushed into the stack at each recursion level. In the backing-out phase, the stacked address is popped and used to execute the rest of the code.\\</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"4\">\n<li>The process of accessing data stored in a serial access memory is similar to manipulating data on a ________<br /> a) Heap<br /> b) Binary Tree<br /> c) Array<br /> d) Stack<br /> View Answer</li>\n</ol>\n<p>Answer: d<br /> Explanation: In serial access memory data records are stored one after the other in which they are created and are accessed sequentially. In stack data structure, elements are accessed sequentially. Stack data structure resembles the serial access memory.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"5\">\n<li>The postfix form of A*B+C/D is?<br /> a) *AB/CD+<br /> b) AB*CD/+<br /> c) A*BC+/D<br /> d) ABCD+/*<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: Infix expression is (A*B)+(C/D)<br /> AB*+(C/D)<br /> AB*CD/+. Thus postfix expression is AB*CD/+.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"6\">\n<li>Which data structure is needed to convert infix notation to postfix notation?<br /> a) Branch<br /> b) Tree<br /> c) Queue<br /> d) Stack<br /> View Answer</li>\n</ol>\n<p>Answer: d<br /> Explanation: The Stack data structure is used to convert infix expression to postfix expression. The purpose of stack is to reverse the order of the operators in the expression. It also serves as a storage structure, as no operator can be printed until both of its operands have appeared.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<ol start=\"7\">\n<li>The prefix form of A-B/ (C * D ^ E) is?<br /> a) -/*^ACBDE<br /> b) -ABCD*^DE<br /> c) -A/B*C^DE<br /> d) -A/BC*^DE<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: Infix Expression is (A-B)/(C*D^E)<br /> (-A/B)(C*D^E)<br /> -A/B*C^DE. Thus prefix expression is -A/B*C^DE.</p>\n<ol start=\"8\">\n<li>What is the result of the following operation?<br /> <strong>Top (Push (S, X))</strong><br /> a) X<br /> b) X+S<br /> c) S<br /> d) XS<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: The function Push(S,X) pushes the value X in the stack S. Top() function gives the value which entered last. X entered into stack S at last.</p>\n<ol start=\"9\">\n<li>The prefix form of an infix expression (p + q) &ndash; (r * t) is?<br /> a) + pq &ndash; *rt<br /> b) &ndash; +pqr * t<br /> c) &ndash; +pq * rt<br /> d) &ndash; + * pqrt<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: Given Infix Expression is ((p+q)-(r*t))<br /> (+pq)-(r*t)<br /> (-+pq)(r*t)<br /> -+pq*rt. Thus prefix expression is -+pq*rt.</p>\n<ol start=\"10\">\n<li>Which data structure is used for implementing recursion?<br /> a) Queue<br /> b) Stack<br /> c) Array<br /> d) List<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: Stacks are used for the implementation of Recursion.</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>This set of Data Structure Multiple Choice Questions &amp; Answers (MCQs) focuses on &ldquo;Queue Operations&rdquo;.</p>\n<ol>\n<li>A linear list of elements in which deletion can be done from one end (front) and insertion can take place only at the other end (rear) is known as _____________<br /> a) Queue<br /> b) Stack<br /> c) Tree<br /> d) Linked list<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Linear list of elements in which deletion is done at front side and insertion at rear side is called Queue. In stack we will delete the last entered element first.</p>\n<ol start=\"2\">\n<li>The data structure required for Breadth First Traversal on a graph is?<br /> a) Stack<br /> b) Array<br /> c) Queue<br /> d) Tree<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: In Breadth First Search Traversal, BFS, starting vertex is first taken and adjacent vertices which are unvisited are also taken. Again, the first vertex which was added as an unvisited adjacent vertex list will be considered to add further unvisited vertices of the graph. To get the first unvisited vertex we need to follows First In First Out principle. Queue uses FIFO principle.</p>\n<ol start=\"3\">\n<li>A queue follows __________<br /> a) FIFO (First In First Out) principle<br /> b) LIFO (Last In First Out) principle<br /> c) Ordered array<br /> d) Linear tree<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Element first added in queue will be deleted first which is FIFO principle.</p>\n<ol start=\"4\">\n<li>Circular Queue is also known as ________<br /> a) Ring Buffer<br /> b) Square Buffer<br /> c) Rectangle Buffer<br /> d) Curve Buffer<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Circular Queue is also called as Ring Buffer. Circular Queue is a linear data structure in which last position is connected back to the first position to make a circle. It forms a ring structure.</p>\n<ol start=\"5\">\n<li>If the elements &ldquo;A&rdquo;, &ldquo;B&rdquo;, &ldquo;C&rdquo; and &ldquo;D&rdquo; are placed in a queue and are deleted one at a time, in what order will they be removed?<br /> a) ABCD<br /> b) DCBA<br /> c) DCAB<br /> d) ABDC<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: Queue follows FIFO approach. i.e. First in First Out Approach. So, the order of removal elements are ABCD.</p>\n<ol start=\"6\">\n<li>A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?<br /> a) Queue<br /> b) Circular queue<br /> c) Dequeue<br /> d) Priority queue<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: In dequeuer, we can insert or delete elements from both the ends. In queue, we will follow first in first out principle for insertion and deletion of elements. Element with least priority will be deleted in a priority queue.</p>\n<ol start=\"7\">\n<li>A normal queue, if implemented using an array of size MAX_SIZE, gets full when?<br /> a) Rear = MAX_SIZE &ndash; 1<br /> b) Front = (rear + 1)mod MAX_SIZE<br /> c) Front = rear + 1<br /> d) Rear = front<br /> View Answer</li>\n</ol>\n<p>Answer: a<br /> Explanation: When Rear = MAX_SIZE &ndash; 1, there will be no space left for the elements to be added in queue. Thus queue becomes full.</p>\n<ol start=\"8\">\n<li>Queues serve major role in ______________<br /> a) Simulation of recursion<br /> b) Simulation of arbitrary linked list<br /> c) Simulation of limited resource allocation<br /> d) Simulation of heap sort<br /> View Answer</li>\n</ol>\n<p>Answer: c<br /> Explanation: Simulation of recursion uses stack data structure. Simulation of arbitrary linked lists uses linked lists. Simulation of resource allocation uses queue as first entered data needs to be given first priority during resource allocation. Simulation of heap sort uses heap data structure.</p>\n<ol start=\"9\">\n<li>Which of the following is not the type of queue?<br /> a) Ordinary queue<br /> b) Single ended queue<br /> c) Circular queue<br /> d) Priority queue<br /> View Answer</li>\n</ol>\n<p>Answer: b<br /> Explanation: Queue always has two ends. So, single ended queue is not the type of queue.</p>\n<p>&nbsp;</p> ",
            "<h2>PSYCHOLOGY OF HUMAN DEVELOPMENT</h2>  "

            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>RESEARCH METHODS</h2> ",
            "<h2>METHOD OF TEACHING ICT</h2>",
            "<h2>DATA COMMUNICATION</h2>",
            "<h2>TECHNOLOGY LEADERSHIP</h2>",
            "<h2>ETHICS AND SECURITY</h2>",
            "<h2>TRENDS IN EDUCATION & SCHOOL MANAGEMENT IN GHANA</h2>",
            "<h2>INTRO. GUIDANCE AND COUNSELLING IN EDUCATION</h2>",
            "<h2>NUMERICAL METHODS AND ANALYSIS</h2>",
            "<h2>EDUCATIONAL SOFTWARE DEVELOPMENT</h2>",
            "<h2>TECHNOLOGY IN SPECIAL EDUCATION</h2>",
            "<h2>ONLINE COURSE DESIGN & MANAGEMENT</h2>",
            "<h2>TECHNOLOGY PROJECT MANAGEMENT & EVALUATION</h2>",
            "<h2>PRE-INTERNSHIP SEMINAR</h2>",
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"

            ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [

            "<h2>ADVANCED OBJECT ORIENTED PROGRAMMING</h2>  ",
            "<h2>ADVANCED SOFTWARE DEVELOPMENT</h2>",
            "<h2>ADVANCED WEB SITE DESIGN</h2>",
            "<h2>ADVANCED COMPUTER NETWORKS & COMMUNICATION</h2>",
            "<h2>MANAGEMENT INFORMATION SYSTEMS</h2>",
            "<h2>ADVANCED DATABASE MANAGEMENT (DBMS)</h2>",
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>Z</h2>"
            ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2></h2>"
            ]
        }
      ]
    },
    {
      "title": "B.SC MATHEMATICS",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<p><strong>Definition of Number:</strong> English grammar is the way in which meanings are encoded into wordings in the English language.</p> <p>&nbsp; &nbsp; &nbsp;This includes the structure of words, phrases, clauses, and sentences, right up to the structure of whole texts.</p>"
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2> <h/2>"
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2> <h/2>"
          ]
        }
      ]
    },
    {
      "title": " B.SC.BUSINESS ADMINISTRATION",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2> </h2>"
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2> </h2>"
          ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2> </h2>"
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2> </h2>"
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2> </h2>"
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2> </h2>"
          ]
        }
      ]
    },
    {
      "title": "B.SC.INTEGRATED SCIENCE",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            ""
          ]
        }
      ]
    },
    {
      "title": "B.SC. PHYSICS",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            ""
          ]
        }
      ]
    },
    {
      "title": "B.SC. ACCOUNTING",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [

            ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            ""
          ]
        }
      ]
    },
    {
      "title": "B.SC. CHEMISTRY",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        }
      ]
    },
    {
      "title": "B.SC. BIOLOGY",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            ""
          ]
        },

        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            ""
          ]
        }
      ]
    },
    {
      "title": "B.SC HUMAN RESOURCES",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            ""
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            ""
          ]
        }

      ]
    },


    {
      "title": "B.SC. ECONOMICS",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        }

      ]
    },
    {
      "title": "B.SC. FRENCH",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        }
      ]
    },
    {
      "title": "B.SC ENGLISH",
      "content": [
        {
          "tag_line": "LEVEL 100 COURSES",
          "details": [
            "<h2></h2>"
            ]
        },
        {
          "tag_line": "LEVEL 200 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
            ]
        },
        {
          "tag_line": "LEVEL 300 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "LEVEL 400 COURSES",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "MPHIL",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        },
        {
          "tag_line": "OTHERS",
          "details": [
            "<h2>MEASUREMENT EVALUATION STATISTICS EDUCATION</h2>"
          ]
        }
      ]
    },
    {
      "title": "Message from Developer",
      "content": [
        {
          "tag_line": "Message Text",
          "details": [
            "<p><strong>Message from Developer:&nbsp;</strong>It took a very long time to develop this app.</p> <p>&nbsp; &nbsp; &nbsp;We had to research on collecting and formatting contents, user-friendly UI and UX design, quiz, enhanced&nbsp;searching option and many more.</p> <p>&nbsp; &nbsp; &nbsp;We tried our best to make this app fault-free. But, it is human nature to make mistakes. That&#39;s why we want your suggestion&nbsp;to improve this app. We are waiting for your feedback.</p> <p>&nbsp; &nbsp; &nbsp;<strong>Happy learning! :)</strong></p>"
          ]
        }
      ]
    }
  ]
}